{
 "type":"object",
 "properties":{
   "model":{
     "type":"object",
     "properties":{
       "all_numeric_objectives":{
         "type":"boolean",
         "description":"If true, appends all numeric fields to objective_fields."
       },
       "boosting":{
         "type":"object",
         "properties":{
           "lambda":{
             "type":"number",
             "description":"Used when generating predictions with missing data"
           },
           "objective_class":{
             "type":"string",
             "description":"The class that this tree targets, used when boosting for classification"
           },
           "objective_field":{
             "type":"string",
             "description":"The field id of the original objective field when boosting is enabled"
           },
           "weight":{
             "type":"number",
             "description":"The tree's weight when boosting (learning rate + step size)"
           }
         },
         "additionalProperties": false,
         "description":"Parameters for boosted trees"
       },
       "boosting_id":{
         "type":"string",
         "description":"For boosting trees, the identifier of their boosting model"
       },
       "callbacks":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "address":{
               "type":"string",
               "description":"For MSG callbacks, the mailbox address to use"
             },
             "delay":{
               "type":"integer",
               "description":"Seed for an initial random delay before first call, in millisecs.  The actual delay is this value plus a random number in [0, 1000)"
             },
             "fire_once":{
               "type":"boolean",
               "description":"A flag specifying whether callbacks should be called at most once, even if the job is requeued and retraces previous states"
             },
             "method":{
               "type":"string" ,
               "enum":[
                 "DELETE", "delete", "put", "msg", "post", "MSG", "POST", "GET", "get", "PUT"
               ],
               "default": "GET",
               "description":"The HTTP method to use"
             },
             "order":{
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"integer",
                   "minimum":0
                 }
               ],
               "description":"Trigger ordering.  Smaller (or nil) orders are triggered first, with progress callbacks taking preference over state callbacks.  Synchronous and asynchronous callbacks are ordered independently.  Callbacks with the same order, states and synchronicity are triggered in the order they are received."
             },
             "payload":{
               "type":"object",
               "description":"The payload to be used as a message body"
             },
             "progress_variation":{
               "type":"number",
               "exclusiveMinimum":0,
               "exclusiveMaximum":1,
               "description":"A number in (0, 1) which gives the variation in progress that will trigger this callback."
             },
             "register-address":{
               "type":"boolean",
               "description":"For MSG callbacks, whether to register the requested address if it does not yet exist (i.e., whether to create the associated message queue when the mailbox is RabbitMQ)"
             },
             "retries":{
               "type":"integer",
               "description":"Number of times the callback is retried on failures"
             },
             "retry_delay":{
               "type":"integer",
               "default": 1000,
               "description":"Seed for a exponential back-off between retries, in millisecs"
             },
             "states":{
               "type":"array" ,
               "items":{
                 "type":"string"
               },
               "description":"A list of states for which the callback should be called. If not given, the callback will be called for either the given progress variation or, if that's not provided, for all state changes"
             },
             "synchronous":{
               "type":"boolean",
               "description":"A flag specifying wether the callback is synchronous and we need to wait for a remote response before proceeding"
             },
             "timeout":{
               "type":"integer",
               "default": 30000,
               "description":"Lapse in millisecs waiting for the callback to get a response"
             },
             "url":{
               "type":"string",
               "description":"The URL to invoke with the method above"
             }
           },
           "required":[
             "url"
           ]
         }
       },
       "combiner":{
         "anyOf":[
           {
             "type":"string" ,
             "enum":[
               "confidence", "probability", "probability_weighted", "plurality", "confidence_weighted"
             ]
           },
           {
             "type":"object",
             "properties":{
               "class":{
                 "type":"string",
                 "description":"Category to be considered the positive class"
               },
               "k":{
                 "type":"integer",
                 "description":"Minimum number of occurrences of positive class"
               },
               "kind":{
                 "type":"string" ,
                 "enum":[
                   "threshold"
                 ]
               }
             },
             "required":[
               "k", "kind"
             ]
           }
         ],
         "description":"When used as part of a model list, what combiner to use for individual predictions"
       },
       "dataset_id":{
         "type":"string",
         "description":"Identifier of this model's main dataset"
       },
       "dataset_ids":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Identifiers of this model's additional datasets"
       },
       "default_numeric_value":{
         "type":"string" ,
         "enum":[
           "mean", "maximum", "minimum", "zero", "median"
         ],
         "description":"Catch-all missing filler for numeric fields."
       },
       "default_values":{
         "type":"object",
         "description":"A map for field identifiers to values for missing entries."
       },
       "depth_threshold":{
         "type":"integer",
         "minimum":1,
         "description":"The depth limit for a tree"
       },
       "discretization":{
         "type":"object",
         "properties":{
           "pretty":{
             "type":"boolean",
             "default": true,
             "description":"Whether edge boundaries are rounded values"
           },
           "size":{
             "type":"integer",
             "minimum":1,
             "default": 5,
             "description":"Number of bins to create"
           },
           "trim":{
             "type":"number",
             "minimum":0,
             "maximum":0.1,
             "default": 0.0,
             "description":"Proportion of data to trim from outer edges of distribution"
           },
           "type":{
             "type":"string" ,
             "enum":[
               "width", "population"
             ],
             "default": "population",
             "description":"Discretize into bins of equal width or population"
           }
         },
         "additionalProperties": false,
         "description":"Parameters to control the discetization of numeric fields"
       },
       "distribution":{
         "type":"object",
         "properties":{
           "predictions":{
             "type":"object",
             "properties":{
               "bins":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values. During model construction, the counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "categories":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"string"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple contains a category and the category occurrence count.  Used when the objective is categorical. For partial models, counts are an estimation and, as such, they won't be in general integers.  But finished models the pairs will always consist of a string and an integer."
               },
               "counts":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Contains tuples of the unique values and their occurrence counts.  Used when there are 32 or less unique numeric values. During model construction, these counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "exact":{
                 "type":"boolean",
                 "description":"When the numeric distribution is in eqi-width format this captures whether the histogram is approximate or represents the distribution exactly"
               },
               "maximum":{
                 "type":"number",
                 "description":"Maximum value for numeric fields, used when 'bins' are present"
               },
               "populations":{
                 "type":"array" ,
                 "items":{
                   "type":"number"
                 },
                 "description":"When the numeric distribution is in eqi-width format this captures the population of each eqi-width bin"
               },
               "start":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width this captures the lower edge of the first bin"
               },
               "width":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width format this captures the width of each eqi-width bin"
               }
             }
           },
           "training":{
             "type":"object",
             "properties":{
               "bins":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values. During model construction, the counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "categories":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"string"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple contains a category and the category occurrence count.  Used when the objective is categorical. For partial models, counts are an estimation and, as such, they won't be in general integers.  But finished models the pairs will always consist of a string and an integer."
               },
               "counts":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Contains tuples of the unique values and their occurrence counts.  Used when there are 32 or less unique numeric values. During model construction, these counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "exact":{
                 "type":"boolean",
                 "description":"When the numeric distribution is in eqi-width format this captures whether the histogram is approximate or represents the distribution exactly"
               },
               "maximum":{
                 "type":"number",
                 "description":"Maximum value for numeric fields, used when 'bins' are present"
               },
               "populations":{
                 "type":"array" ,
                 "items":{
                   "type":"number"
                 },
                 "description":"When the numeric distribution is in eqi-width format this captures the population of each eqi-width bin"
               },
               "start":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width this captures the lower edge of the first bin"
               },
               "width":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width format this captures the width of each eqi-width bin"
               }
             }
           }
         },
         "additionalProperties": false,
         "description":"The training data distribution across predicted values, initially and after flowing through the tree"
       },
       "ensemble_sample":{
         "type":"object",
         "properties":{
           "rate":{
             "type":"number",
             "minimum":0,
             "default": 1.0,
             "description":"The rate: fraction of rows we pick"
           },
           "replace":{
             "type":"boolean",
             "default": true,
             "description":"Whether we sample with replacement or not"
           },
           "seed":{
             "type":"string",
             "description":"Seeds the ensemble so that it's deterministic"
           }
         },
         "additionalProperties": false,
         "description":"The sampling parameters for this ensemble"
       },
       "excluded_input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of field identifiers, names or columns to exclude from input"
       },
       "excluded_input_fields_regexps":{
         "type":"array" ,
         "items":{
           "type":"string",
           "description":"A valid regular expression"
         },
         "description":"List of regular expressions, excluding input fields  by name"
       },
       "field_discretizations":{
         "type":"object",
         "additionalProperties": false,
         "description":"Per-field discretization parameters"
       },
       "fields":{
         "anyOf":[
           {
             "type":"object",
             "additionalProperties": false
           },
           {
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "numeric"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "bins":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                         },
                         "counts":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                         },
                         "kurtosis":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample kurtosis for numeric fields"
                         },
                         "maximum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Maximum value for numeric fields"
                         },
                         "mean":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample mean for numeric fields"
                         },
                         "median":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The approximate median for numeric fields"
                         },
                         "minimum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Minimum value for numeric fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "population":{
                           "type":"integer",
                           "description":"# of instances containing data for this field"
                         },
                         "skewness":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample skewness for numeric fields"
                         },
                         "standard_deviation":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample standard deviation for numeric fields"
                         },
                         "sum":{
                           "type":"number",
                           "description":"Sum of values (for mean calculation)"
                         },
                         "sum_squares":{
                           "type":"number",
                           "description":"Sum of squared values (for variance calculation)"
                         },
                         "variance":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample variance for numeric fields"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "text"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "tag_cloud":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top terms with number of occurences"
                         },
                         "term_forms":{
                           "type":"object",
                           "description":"Dictionary of multi-form terms to all forms seen"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "datetime"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "maximum":{
                           "type":"string",
                           "description":"Maximum datetime, as a string value"
                         },
                         "maximum_timestamp":{
                           "type":"integer",
                           "description":"Maximum datetime, as a numeric epoch"
                         },
                         "minimum":{
                           "type":"string",
                           "description":"Minimum datetime, as a string value"
                         },
                         "minimum_timestamp":{
                           "type":"integer",
                           "description":"Minimum datetime, as a numeric epoch"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "non_decreasing":{
                           "type":"boolean",
                           "description":"True if times never decrease with row number"
                         },
                         "non_increasing":{
                           "type":"boolean",
                           "description":"True if times never increase with row number"
                         }
                       },
                       "additionalProperties": false
                     },
                     "time_formats":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Formats of times in this field from clj-time"
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "item_analysis":{
                       "type":"object",
                       "properties":{
                         "limit":{
                           "type":"number",
                           "minimum":1,
                           "default": 10000,
                           "description":"Maximum number of items considered."
                         },
                         "pruning_strategy":{
                           "type":"string" ,
                           "enum":[
                             "nearest_to_frequency", "most_frequent"
                           ],
                           "default": "nearest_to_frequency",
                           "description":"Strategy used to select items when item_limit is surpassed"
                         },
                         "separator":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                         },
                         "separator_regexp":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Regular expression delimiting items in the field. Overrides item_separator."
                         },
                         "target_frequency":{
                           "type":"number",
                           "minimum":0,
                           "maximum":1,
                           "default": 0.3333333333333333,
                           "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                         }
                       },
                       "description":"Parameters controlling how items are extracted from text"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "items"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "items":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top items with number of occurences"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "categorical"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "categories":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"The possible categories for categorical fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 }
               ]
             }
           }
         ],
         "description":"Possibly partial list of descriptors for fields used in the model"
       },
       "fields_maps":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "additionalProperties": false
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "additionalProperties": false
                 }
               ]
             }
           ]
         },
         "description":"List of field maps to be used with dataset_ids"
       },
       "importance":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":[
             {
               "type":"string"
             },
             {
               "type":"number"
             }
           ]
         },
         "description":"Contains pairs of field ids and importance scores (one for each input field). The higher the score, the more the field helps reduce error on the training set"
       },
       "input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of input field identifiers, names or columns"
       },
       "input_fields_regexps":{
         "type":"array" ,
         "items":{
           "type":"string",
           "description":"A valid regular expression"
         },
         "description":"List of regular expressions, selecting input fields  by name"
       },
       "kind":{
         "type":"string" ,
         "enum":[
           "ensemble"
         ],
         "description":"The kind of this message's body"
       },
       "locale":{
         "type":"string",
         "description":"Default locale for field value"
       },
       "missing_splits":{
         "type":"boolean",
         "description":"Whether to include missing features values when picking splits in the trees"
       },
       "missing_strategy":{
         "type":"string" ,
         "enum":[
           "last_prediction", "proportional"
         ],
         "default": "last_prediction"
       },
       "missing_tokens":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "default": [],
         "description":"Default tokens that represent a missing value"
       },
       "model_fields":{
         "anyOf":[
           {
             "type":"object",
             "additionalProperties": false
           },
           {
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "numeric"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "bins":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                         },
                         "counts":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                         },
                         "kurtosis":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample kurtosis for numeric fields"
                         },
                         "maximum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Maximum value for numeric fields"
                         },
                         "mean":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample mean for numeric fields"
                         },
                         "median":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The approximate median for numeric fields"
                         },
                         "minimum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Minimum value for numeric fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "population":{
                           "type":"integer",
                           "description":"# of instances containing data for this field"
                         },
                         "skewness":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample skewness for numeric fields"
                         },
                         "standard_deviation":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample standard deviation for numeric fields"
                         },
                         "sum":{
                           "type":"number",
                           "description":"Sum of values (for mean calculation)"
                         },
                         "sum_squares":{
                           "type":"number",
                           "description":"Sum of squared values (for variance calculation)"
                         },
                         "variance":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample variance for numeric fields"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "text"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "tag_cloud":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top terms with number of occurences"
                         },
                         "term_forms":{
                           "type":"object",
                           "description":"Dictionary of multi-form terms to all forms seen"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "datetime"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "maximum":{
                           "type":"string",
                           "description":"Maximum datetime, as a string value"
                         },
                         "maximum_timestamp":{
                           "type":"integer",
                           "description":"Maximum datetime, as a numeric epoch"
                         },
                         "minimum":{
                           "type":"string",
                           "description":"Minimum datetime, as a string value"
                         },
                         "minimum_timestamp":{
                           "type":"integer",
                           "description":"Minimum datetime, as a numeric epoch"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "non_decreasing":{
                           "type":"boolean",
                           "description":"True if times never decrease with row number"
                         },
                         "non_increasing":{
                           "type":"boolean",
                           "description":"True if times never increase with row number"
                         }
                       },
                       "additionalProperties": false
                     },
                     "time_formats":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Formats of times in this field from clj-time"
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "item_analysis":{
                       "type":"object",
                       "properties":{
                         "limit":{
                           "type":"number",
                           "minimum":1,
                           "default": 10000,
                           "description":"Maximum number of items considered."
                         },
                         "pruning_strategy":{
                           "type":"string" ,
                           "enum":[
                             "nearest_to_frequency", "most_frequent"
                           ],
                           "default": "nearest_to_frequency",
                           "description":"Strategy used to select items when item_limit is surpassed"
                         },
                         "separator":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                         },
                         "separator_regexp":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Regular expression delimiting items in the field. Overrides item_separator."
                         },
                         "target_frequency":{
                           "type":"number",
                           "minimum":0,
                           "maximum":1,
                           "default": 0.3333333333333333,
                           "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                         }
                       },
                       "description":"Parameters controlling how items are extracted from text"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "items"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "items":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top items with number of occurences"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "categorical"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "categories":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"The possible categories for categorical fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 }
               ]
             }
           }
         ],
         "description":"Map of descriptors for fields actually appearing in the model, without summaries"
       },
       "models":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"A list of the identifiers of the trees built so far in the ensemble"
       },
       "node_threshold":{
         "type":"integer",
         "minimum":1,
         "default": 512,
         "description":"The soft limit for number of nodes in the tree"
       },
       "objective_field":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "anyOf":[
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "numeric"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "bins":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"number"
                             },
                             {
                               "type":"integer"
                             }
                           ]
                         },
                         "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                       },
                       "counts":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"number"
                             },
                             {
                               "type":"integer"
                             }
                           ]
                         },
                         "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                       },
                       "kurtosis":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample kurtosis for numeric fields"
                       },
                       "maximum":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"Maximum value for numeric fields"
                       },
                       "mean":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample mean for numeric fields"
                       },
                       "median":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The approximate median for numeric fields"
                       },
                       "minimum":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"Minimum value for numeric fields"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "population":{
                         "type":"integer",
                         "description":"# of instances containing data for this field"
                       },
                       "skewness":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample skewness for numeric fields"
                       },
                       "standard_deviation":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample standard deviation for numeric fields"
                       },
                       "sum":{
                         "type":"number",
                         "description":"Sum of values (for mean calculation)"
                       },
                       "sum_squares":{
                         "type":"number",
                         "description":"Sum of squared values (for variance calculation)"
                       },
                       "variance":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample variance for numeric fields"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "text"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "average_length":{
                         "type":"number",
                         "description":"The average # of chars for non-missing values"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "tag_cloud":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"Top terms with number of occurences"
                       },
                       "term_forms":{
                         "type":"object",
                         "description":"Dictionary of multi-form terms to all forms seen"
                       }
                     }
                   },
                   "term_analysis":{
                     "type":"object",
                     "properties":{
                       "bigrams":{
                         "type":"boolean",
                         "description":"Allow terms to be bigrams"
                       },
                       "case_sensitive":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis is case sensitive"
                       },
                       "enabled":{
                         "type":"boolean",
                         "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                       },
                       "excluded_terms":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of terms to ignore when performing term analysis"
                       },
                       "language":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                             ]
                           }
                         ],
                         "default": "none",
                         "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                       },
                       "ngrams":{
                         "type":"integer",
                         "minimum":1,
                         "description":"The maximum length of consecutive tokens to consider as terms"
                       },
                       "stem_words":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis stems words"
                       },
                       "stopword_diligence":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "light", "aggressive", "normal"
                             ]
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       },
                       "stopword_removal":{
                         "type":"string" ,
                         "enum":[
                           "none", "all_languages", "selected_language"
                         ],
                         "description":"Remove words that are stopwords in any language."
                       },
                       "term_filters":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string" ,
                               "enum":[
                                 "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                               ]
                             }
                           }
                         ],
                         "description":"A list of filters to apply when choosing the termset"
                       },
                       "term_regexps":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of regular expressions to consider as terms"
                       },
                       "token_mode":{
                         "type":"string" ,
                         "enum":[
                           "full_terms_only", "tokens_only", "all"
                         ],
                         "default": "all",
                         "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                       },
                       "use_stopwords":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "datetime"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "maximum":{
                         "type":"string",
                         "description":"Maximum datetime, as a string value"
                       },
                       "maximum_timestamp":{
                         "type":"integer",
                         "description":"Maximum datetime, as a numeric epoch"
                       },
                       "minimum":{
                         "type":"string",
                         "description":"Minimum datetime, as a string value"
                       },
                       "minimum_timestamp":{
                         "type":"integer",
                         "description":"Minimum datetime, as a numeric epoch"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "non_decreasing":{
                         "type":"boolean",
                         "description":"True if times never decrease with row number"
                       },
                       "non_increasing":{
                         "type":"boolean",
                         "description":"True if times never increase with row number"
                       }
                     },
                     "additionalProperties": false
                   },
                   "time_formats":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Formats of times in this field from clj-time"
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "item_analysis":{
                     "type":"object",
                     "properties":{
                       "limit":{
                         "type":"number",
                         "minimum":1,
                         "default": 10000,
                         "description":"Maximum number of items considered."
                       },
                       "pruning_strategy":{
                         "type":"string" ,
                         "enum":[
                           "nearest_to_frequency", "most_frequent"
                         ],
                         "default": "nearest_to_frequency",
                         "description":"Strategy used to select items when item_limit is surpassed"
                       },
                       "separator":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string"
                           }
                         ],
                         "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                       },
                       "separator_regexp":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string"
                           }
                         ],
                         "description":"Regular expression delimiting items in the field. Overrides item_separator."
                       },
                       "target_frequency":{
                         "type":"number",
                         "minimum":0,
                         "maximum":1,
                         "default": 0.3333333333333333,
                         "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                       }
                     },
                     "description":"Parameters controlling how items are extracted from text"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "items"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "average_length":{
                         "type":"number",
                         "description":"The average # of chars for non-missing values"
                       },
                       "items":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"Top items with number of occurences"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "categorical"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "categories":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"The possible categories for categorical fields"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       }
                     }
                   },
                   "term_analysis":{
                     "type":"object",
                     "properties":{
                       "bigrams":{
                         "type":"boolean",
                         "description":"Allow terms to be bigrams"
                       },
                       "case_sensitive":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis is case sensitive"
                       },
                       "enabled":{
                         "type":"boolean",
                         "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                       },
                       "excluded_terms":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of terms to ignore when performing term analysis"
                       },
                       "language":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                             ]
                           }
                         ],
                         "default": "none",
                         "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                       },
                       "ngrams":{
                         "type":"integer",
                         "minimum":1,
                         "description":"The maximum length of consecutive tokens to consider as terms"
                       },
                       "stem_words":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis stems words"
                       },
                       "stopword_diligence":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "light", "aggressive", "normal"
                             ]
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       },
                       "stopword_removal":{
                         "type":"string" ,
                         "enum":[
                           "none", "all_languages", "selected_language"
                         ],
                         "description":"Remove words that are stopwords in any language."
                       },
                       "term_filters":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string" ,
                               "enum":[
                                 "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                               ]
                             }
                           }
                         ],
                         "description":"A list of filters to apply when choosing the termset"
                       },
                       "term_regexps":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of regular expressions to consider as terms"
                       },
                       "token_mode":{
                         "type":"string" ,
                         "enum":[
                           "full_terms_only", "tokens_only", "all"
                         ],
                         "default": "all",
                         "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                       },
                       "use_stopwords":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       }
                     }
                   }
                 }
               }
             ]
           }
         ],
         "description":"Objective field (target) identifier.  Gets added to objective_fields. Useful for models with a single objective field."
       },
       "objective_field_descriptor":{
         "anyOf":[
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "numeric"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "bins":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"integer"
                         }
                       ]
                     },
                     "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                   },
                   "counts":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"integer"
                         }
                       ]
                     },
                     "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                   },
                   "kurtosis":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample kurtosis for numeric fields"
                   },
                   "maximum":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"Maximum value for numeric fields"
                   },
                   "mean":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample mean for numeric fields"
                   },
                   "median":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The approximate median for numeric fields"
                   },
                   "minimum":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"Minimum value for numeric fields"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "population":{
                     "type":"integer",
                     "description":"# of instances containing data for this field"
                   },
                   "skewness":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample skewness for numeric fields"
                   },
                   "standard_deviation":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample standard deviation for numeric fields"
                   },
                   "sum":{
                     "type":"number",
                     "description":"Sum of values (for mean calculation)"
                   },
                   "sum_squares":{
                     "type":"number",
                     "description":"Sum of squared values (for variance calculation)"
                   },
                   "variance":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample variance for numeric fields"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "text"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "average_length":{
                     "type":"number",
                     "description":"The average # of chars for non-missing values"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "tag_cloud":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"Top terms with number of occurences"
                   },
                   "term_forms":{
                     "type":"object",
                     "description":"Dictionary of multi-form terms to all forms seen"
                   }
                 }
               },
               "term_analysis":{
                 "type":"object",
                 "properties":{
                   "bigrams":{
                     "type":"boolean",
                     "description":"Allow terms to be bigrams"
                   },
                   "case_sensitive":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis is case sensitive"
                   },
                   "enabled":{
                     "type":"boolean",
                     "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                   },
                   "excluded_terms":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of terms to ignore when performing term analysis"
                   },
                   "language":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                         ]
                       }
                     ],
                     "default": "none",
                     "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                   },
                   "ngrams":{
                     "type":"integer",
                     "minimum":1,
                     "description":"The maximum length of consecutive tokens to consider as terms"
                   },
                   "stem_words":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis stems words"
                   },
                   "stopword_diligence":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "light", "aggressive", "normal"
                         ]
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   },
                   "stopword_removal":{
                     "type":"string" ,
                     "enum":[
                       "none", "all_languages", "selected_language"
                     ],
                     "description":"Remove words that are stopwords in any language."
                   },
                   "term_filters":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string" ,
                           "enum":[
                             "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                           ]
                         }
                       }
                     ],
                     "description":"A list of filters to apply when choosing the termset"
                   },
                   "term_regexps":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of regular expressions to consider as terms"
                   },
                   "token_mode":{
                     "type":"string" ,
                     "enum":[
                       "full_terms_only", "tokens_only", "all"
                     ],
                     "default": "all",
                     "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                   },
                   "use_stopwords":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "datetime"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "maximum":{
                     "type":"string",
                     "description":"Maximum datetime, as a string value"
                   },
                   "maximum_timestamp":{
                     "type":"integer",
                     "description":"Maximum datetime, as a numeric epoch"
                   },
                   "minimum":{
                     "type":"string",
                     "description":"Minimum datetime, as a string value"
                   },
                   "minimum_timestamp":{
                     "type":"integer",
                     "description":"Minimum datetime, as a numeric epoch"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "non_decreasing":{
                     "type":"boolean",
                     "description":"True if times never decrease with row number"
                   },
                   "non_increasing":{
                     "type":"boolean",
                     "description":"True if times never increase with row number"
                   }
                 },
                 "additionalProperties": false
               },
               "time_formats":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Formats of times in this field from clj-time"
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "item_analysis":{
                 "type":"object",
                 "properties":{
                   "limit":{
                     "type":"number",
                     "minimum":1,
                     "default": 10000,
                     "description":"Maximum number of items considered."
                   },
                   "pruning_strategy":{
                     "type":"string" ,
                     "enum":[
                       "nearest_to_frequency", "most_frequent"
                     ],
                     "default": "nearest_to_frequency",
                     "description":"Strategy used to select items when item_limit is surpassed"
                   },
                   "separator":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string"
                       }
                     ],
                     "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                   },
                   "separator_regexp":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string"
                       }
                     ],
                     "description":"Regular expression delimiting items in the field. Overrides item_separator."
                   },
                   "target_frequency":{
                     "type":"number",
                     "minimum":0,
                     "maximum":1,
                     "default": 0.3333333333333333,
                     "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                   }
                 },
                 "description":"Parameters controlling how items are extracted from text"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "items"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "average_length":{
                     "type":"number",
                     "description":"The average # of chars for non-missing values"
                   },
                   "items":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"Top items with number of occurences"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "categorical"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "categories":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"The possible categories for categorical fields"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   }
                 }
               },
               "term_analysis":{
                 "type":"object",
                 "properties":{
                   "bigrams":{
                     "type":"boolean",
                     "description":"Allow terms to be bigrams"
                   },
                   "case_sensitive":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis is case sensitive"
                   },
                   "enabled":{
                     "type":"boolean",
                     "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                   },
                   "excluded_terms":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of terms to ignore when performing term analysis"
                   },
                   "language":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                         ]
                       }
                     ],
                     "default": "none",
                     "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                   },
                   "ngrams":{
                     "type":"integer",
                     "minimum":1,
                     "description":"The maximum length of consecutive tokens to consider as terms"
                   },
                   "stem_words":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis stems words"
                   },
                   "stopword_diligence":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "light", "aggressive", "normal"
                         ]
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   },
                   "stopword_removal":{
                     "type":"string" ,
                     "enum":[
                       "none", "all_languages", "selected_language"
                     ],
                     "description":"Remove words that are stopwords in any language."
                   },
                   "term_filters":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string" ,
                           "enum":[
                             "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                           ]
                         }
                       }
                     ],
                     "description":"A list of filters to apply when choosing the termset"
                   },
                   "term_regexps":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of regular expressions to consider as terms"
                   },
                   "token_mode":{
                     "type":"string" ,
                     "enum":[
                       "full_terms_only", "tokens_only", "all"
                     ],
                     "default": "all",
                     "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                   },
                   "use_stopwords":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   }
                 }
               }
             }
           }
         ],
         "description":"The full descriptor of the objective field, when there's only one."
       },
       "objective_fields":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Collection of objective field identifiers (targets)"
       },
       "objective_weights":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":[
             {
               "type":"string"
             },
             {
               "type":"number"
             }
           ]
         },
         "description":"For classification models, this maps the objective classes to class weights"
       },
       "operating_point":{
         "type":"object",
         "properties":{
           "kind":{
             "type":"string" ,
             "enum":[
               "confidence", "probability", "votes"
             ],
             "default": "probability",
             "description":"Kind of threshold to apply"
           },
           "positive_class":{
             "type":"string",
             "description":"The class the threshold applies to"
           },
           "threshold":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Numerical value of the threshold"
           }
         },
         "required":[
           "threshold"
         ],
         "additionalProperties": false,
         "description":"Default operating point to be used by this model during predictions"
       },
       "optimization_params":{
         "type":"object",
         "properties":{
           "apian_dataset_id":{
             "type":"string",
             "description":"The apian id of the dataset over which to run the search"
           },
           "apian_query_params":{
             "type":"object",
             "additionalProperties": false,
             "description":"Additional query params to add to all URL requests in the optimization execution"
           },
           "apian_test_dataset_id":{
             "type":"string",
             "description":"The apian id of the dataset for validation"
           },
           "apian_uri":{
             "type":"string",
             "description":"The base URI to which API requests should go in the optimization execution"
           },
           "creation_defaults":{
             "type":"object",
             "default": {},
             "description":"Defaults for submodel creation"
           },
           "dataset_id":{
             "type":"string",
             "description":"The id of the dataset over which to run the search"
           },
           "excluded_input_fields":{
             "type":"array" ,
             "items":{
               "type":"string"
             },
             "description":"ids of fields to be excluded for all models"
           },
           "input_fields":{
             "type":"array" ,
             "items":{
               "type":"string"
             },
             "description":"ids of fields to be included for all models"
           },
           "max_training_time":{
             "type":"integer",
             "minimum":1,
             "default": 1800,
             "description":"Wall-clock time (in seconds) that the search was run."
           },
           "metric":{
             "type":"string" ,
             "enum":[
               "phi_coefficient", "precision", "area_under_roc_curve", "recall", "max_phi", "balanced_accuracy", "area_under_pr_curve", "f_measure", "r_squared", "ks_statistic", "accuracy", "kendalls_tau_b", "spearmans_rho"
             ],
             "default": "max_phi",
             "description":"The metric to optimize"
           },
           "metric_class":{
             "type":"string",
             "description":"The class to optimize for"
           },
           "model_types":{
             "type":"array" ,
             "items":{
               "type":"string" ,
               "enum":[
                 "model", "deepnet", "boosting", "ensemble", "logisticregression", "all", "only_ensemble"
               ]
             },
             "default": ["all"],
             "description":"List of model types to try or empty for all"
           },
           "number_of_model_candidates":{
             "type":"integer",
             "minimum":1,
             "maximum":200,
             "default": 128,
             "description":"The number of models tried in the model search"
           },
           "objective_field":{
             "type":"string",
             "description":"The id for the objective field of all models"
           },
           "seed":{
             "type":"string",
             "default": "search",
             "description":"The random seed for the search"
           },
           "test_dataset_id":{
             "type":"string",
             "description":"The id of a dataset to use for testing, or nil for random splits"
           },
           "tlp":{
             "type":"integer",
             "default": 4,
             "description":"Maximum number of simultaneous, non-finished, resource creation tasks."
           }
         },
         "description":"Parameters to use for optimizing when optimized is true"
       },
       "optimize":{
         "type":"boolean",
         "description":"Whether we should infer the best parameterization using  an optimization"
       },
       "ordering":{
         "type":"string" ,
         "enum":[
           "random", "linear", "deterministic"
         ],
         "default": "deterministic"
       },
       "prune_holdout":{
         "type":"number",
         "minimum":0,
         "maximum":1,
         "description":"DEPRECATED - Pruning with a holdout set"
       },
       "random_candidate_ratio":{
         "type":"number",
         "minimum":0,
         "maximum":1,
         "description":"Similar to 'random_candidates' but expressed as a ratio of the total candidates (between 0 and 1)"
       },
       "random_candidates":{
         "type":"integer",
         "description":"Sets the number of random fields considered when 'randomize' is true. By default this is the square root of the total number of input fields. Also known as 'mtry' in the R random forest package"
       },
       "randomize":{
         "type":"boolean",
         "description":"When true only a random subset of fields are considered for each split (ala random forests)"
       },
       "root":{
         "type":"object",
         "properties":{
           "children":{
             "type":"array" ,
             "items":{
               "$ref":"node.json"
             },
             "description":"Children of this node"
           },
           "confidence":{
             "type":"number",
             "minimum":0,
             "description":"Probability of correctness for classification and an estimate of the error for regression"
           },
           "count":{
             "type":"number",
             "description":"Number of training instances at this node"
           },
           "distribution":{
             "type":"array" ,
             "items":{
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"number"
                 }
               ]
             },
             "description":"DEPRECATED - Distribution of the target at this node"
           },
           "id":{
             "type":"number",
             "description":"The node id, assigned depth first starting with 0"
           },
           "objective_summary":{
             "type":"object",
             "properties":{
               "bins":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values. During model construction, the counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "categories":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"string"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Each tuple contains a category and the category occurrence count.  Used when the objective is categorical. For partial models, counts are an estimation and, as such, they won't be in general integers.  But finished models the pairs will always consist of a string and an integer."
               },
               "counts":{
                 "type":"array" ,
                 "items":{
                   "type":"array" ,
                   "items":[
                     {
                       "type":"number"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 },
                 "description":"Captures the distribution for the objective field.  Contains tuples of the unique values and their occurrence counts.  Used when there are 32 or less unique numeric values. During model construction, these counts can be fractional for partial models.  When the model is finished, however, all counts will be integers."
               },
               "exact":{
                 "type":"boolean",
                 "description":"When the numeric distribution is in eqi-width format this captures whether the histogram is approximate or represents the distribution exactly"
               },
               "maximum":{
                 "type":"number",
                 "description":"Maximum value for numeric fields, used when 'bins' are present"
               },
               "populations":{
                 "type":"array" ,
                 "items":{
                   "type":"number"
                 },
                 "description":"When the numeric distribution is in eqi-width format this captures the population of each eqi-width bin"
               },
               "start":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width this captures the lower edge of the first bin"
               },
               "width":{
                 "type":"number",
                 "description":"When the numeric distribution is in eqi-width format this captures the width of each eqi-width bin"
               }
             },
             "description":"Distribution for the the prediction at this point"
           },
           "output":{
             "anyOf":[
               {
                 "type":"number"
               },
               {
                 "type":"string"
               }
             ],
             "description":"Prediction given at this node"
           },
           "predicate":{
             "anyOf":[
               {
                 "type":"boolean"
               },
               {
                 "type":"object",
                 "properties":{
                   "field":{
                     "type":"string",
                     "description":"Identifier of the field used for this decision"
                   },
                   "importance":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number",
                         "minimum":0,
                         "maximum":1
                       }
                     ],
                     "description":"Optional importance of this decision to the 'enclosing' combination of model and input."
                   },
                   "operator":{
                     "type":"string" ,
                     "enum":[
                       "!=", "=", "lt", "<=", "notEqual", "greaterThan", "eq", "/=", "=*", "gt", "greaterOrEqual", "!in", "<=*", "or", ">*", ">=", "!=*", "lessThan", "and", "ge", "<", "le", "equal", "lessOrEqual", "equals", "in", ">"
                     ],
                     "description":"Operator used to test the field's value"
                   },
                   "term":{
                     "type":"string",
                     "description":"The term/word of interest for the predicate. The occurance count of this term will be the value that is split on."
                   },
                   "value":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "anyOf":[
                           {
                             "anyOf":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"string"
                               }
                             ]
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "anyOf":[
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "type":"string"
                                 }
                               ]
                             }
                           }
                         ]
                       }
                     ],
                     "description":"Value used, besides the field's, for this decision"
                   }
                 }
               }
             ]
           },
           "weight":{
             "type":"number",
             "description":"Total weight at this node (if tree is weighted)"
           }
         },
         "required":[
           "count", "output", "predicate"
         ],
         "description":"The root node of the decision tree"
       },
       "row_range":{
         "type":"object",
         "properties":{
           "size":{
             "type":"integer",
             "minimum":0
           },
           "start":{
             "type":"integer",
             "minimum":0
           }
         },
         "description":"Rows used to build this object"
       },
       "row_ranges":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Rows used to build this object, per dataset"
       },
       "sample":{
         "type":"object",
         "properties":{
           "out_of_bag":{
             "type":"boolean",
             "description":"Is the sampling out of bag?"
           },
           "rate":{
             "type":"number",
             "minimum":0,
             "default": 1.0,
             "description":"The rate: fraction of rows we pick"
           },
           "replace":{
             "type":"boolean",
             "description":"Whether we sample with replacement or not"
           },
           "seed":{
             "anyOf":[
               {
                 "type":"number"
               },
               {
                 "type":"string"
               }
             ],
             "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
           }
         },
         "description":"Sampling of input rows used to build this object"
       },
       "samples":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Sampling of rows used to build this object, per dataset"
       },
       "seed":{
         "type":"string",
         "description":"Seed value for random generators"
       },
       "selective_pruning":{
         "type":"boolean",
         "description":"When true, stat pruning will have less effect for small datasets"
       },
       "size":{
         "type":"integer",
         "minimum":1,
         "default": 10,
         "description":"The desired number of trees in the ensemble"
       },
       "split_candidates":{
         "type":"integer",
         "minimum":1,
         "default": 32,
         "description":"The maximum number of split points considered for each numeric split"
       },
       "split_criterion":{
         "type":"string" ,
         "enum":[
           "information_gain", "information_gain_mix", "squared_error", "information_gain_ratio", "squared_error_ratio"
         ],
         "description":"Method of choosing best attribute and split point for a given node"
       },
       "stat_pruning":{
         "anyOf":[
           {
             "type":"null"
           },
           {
             "type":"boolean"
           }
         ],
         "default": true,
         "description":"Eliminates low confidence leaf nodes from tree statistical tests"
       },
       "support_threshold":{
         "type":"number",
         "minimum":0,
         "description":"Controls the minimum support each child node must contain for a split to be valid. Since instances may have non-integer weights, non-integer values are valid."
       },
       "training_performance_measure":{
         "type":"object",
         "properties":{
           "accuracy":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Accuracy (correct/total) for this class"
           },
           "area_under_pr_curve":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Area under the precision/recall curve for this class"
           },
           "area_under_roc_curve":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Area under the ROC curve for this class"
           },
           "balanced_accuracy":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Balanced accuracy for this class"
           },
           "class_name":{
             "type":"string",
             "description":"String name for this class"
           },
           "f_measure":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"F1 Score for this class"
           },
           "ks_statistic":{
             "type":"array" ,
             "items":[
               {
                 "type":"number"
               },
               {
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"number"
                   }
                 ]
               }
             ],
             "description":"The KS-statistic for this class"
           },
           "max_phi":{
             "type":"array" ,
             "items":[
               {
                 "type":"number"
               },
               {
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"number"
                   }
                 ]
               }
             ],
             "description":"The max value for phi at any threshold for this class"
           },
           "per_threshold_confusion_matrices":{
             "type":"array" ,
             "items":{
               "type":"array" ,
               "items":[
                 {
                   "type":"array" ,
                   "items":{
                     "type":"integer",
                     "minimum":0
                   }
                 },
                 {
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"number"
                     }
                   ]
                 }
               ]
             },
             "description":"Confusion matrices at multiple thresholds"
           },
           "phi_coefficient":{
             "type":"number",
             "minimum":-1,
             "maximum":1,
             "description":"Phi coefficient for this class"
           },
           "precision":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Precision for this class"
           },
           "present_in_test_data":{
             "type":"boolean",
             "description":"Whether or not this class was seen in the test data for the evaluation"
           },
           "recall":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Recall for this class"
           }
         },
         "description":"Performance measures on training data"
       },
       "type":{
         "anyOf":[
           {
             "type":"null"
           },
           {
             "type":"string" ,
             "enum":[
               "unsupervised", "timeseries", "composite", "statistics", "classification", "regression"
             ]
           }
         ],
         "description":"Identifier of this model's type (e.g., regression)"
       },
       "weight_field":{
         "type":"string",
         "description":"Weight field identifier"
       },
       "z_statistic":{
         "type":"number",
         "default": 1,
         "description":"PRIVATE - Parameter for stat pruning"
       }
     },
     "required":[
       "kind"
     ]
   }
 },
 "required":[
   "model"
 ],
 "additionalProperties": false
}