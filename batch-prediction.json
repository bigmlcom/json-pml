{
 "type":"object",
 "properties":{
   "prediction":{
     "type":"object",
     "properties":{
       "all_fields":{
         "type":"boolean",
         "description":"Include all fields in the output, ignoring output_fields"
       },
       "all_numeric_objectives":{
         "type":"boolean",
         "description":"If true, appends all numeric fields to objective_fields."
       },
       "callbacks":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "address":{
               "type":"string",
               "description":"For MSG callbacks, the mailbox address to use"
             },
             "delay":{
               "type":"integer",
               "description":"Seed for an initial random delay before first call, in millisecs.  The actual delay is this value plus a random number in [0, 1000)"
             },
             "fire_once":{
               "type":"boolean",
               "description":"A flag specifying whether callbacks should be called at most once, even if the job is requeued and retraces previous states"
             },
             "method":{
               "type":"string" ,
               "enum":[
                 "DELETE", "delete", "put", "msg", "post", "MSG", "POST", "GET", "get", "PUT"
               ],
               "default": "GET",
               "description":"The HTTP method to use"
             },
             "order":{
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"integer",
                   "minimum":0
                 }
               ],
               "description":"Trigger ordering.  Smaller (or nil) orders are triggered first, with progress callbacks taking preference over state callbacks.  Synchronous and asynchronous callbacks are ordered independently.  Callbacks with the same order, states and synchronicity are triggered in the order they are received."
             },
             "payload":{
               "type":"object",
               "description":"The payload to be used as a message body"
             },
             "progress_variation":{
               "type":"number",
               "exclusiveMinimum":0,
               "exclusiveMaximum":1,
               "description":"A number in (0, 1) which gives the variation in progress that will trigger this callback."
             },
             "register-address":{
               "type":"boolean",
               "description":"For MSG callbacks, whether to register the requested address if it does not yet exist (i.e., whether to create the associated message queue when the mailbox is RabbitMQ)"
             },
             "retries":{
               "type":"integer",
               "description":"Number of times the callback is retried on failures"
             },
             "retry_delay":{
               "type":"integer",
               "default": 1000,
               "description":"Seed for a exponential back-off between retries, in millisecs"
             },
             "states":{
               "type":"array" ,
               "items":{
                 "type":"string"
               },
               "description":"A list of states for which the callback should be called. If not given, the callback will be called for either the given progress variation or, if that's not provided, for all state changes"
             },
             "synchronous":{
               "type":"boolean",
               "description":"A flag specifying wether the callback is synchronous and we need to wait for a remote response before proceeding"
             },
             "timeout":{
               "type":"integer",
               "default": 30000,
               "description":"Lapse in millisecs waiting for the callback to get a response"
             },
             "url":{
               "type":"string",
               "description":"The URL to invoke with the method above"
             }
           },
           "required":[
             "url"
           ]
         }
       },
       "combiner":{
         "anyOf":[
           {
             "type":"string" ,
             "enum":[
               "confidence", "probability", "probability_weighted", "plurality", "confidence_weighted"
             ]
           },
           {
             "type":"object",
             "properties":{
               "class":{
                 "type":"string",
                 "description":"Category to be considered the positive class"
               },
               "k":{
                 "type":"integer",
                 "description":"Minimum number of occurrences of positive class"
               },
               "kind":{
                 "type":"string" ,
                 "enum":[
                   "threshold"
                 ]
               }
             },
             "required":[
               "k", "kind"
             ]
           }
         ],
         "default": "probability",
         "description":"The strategy for combining predictions"
       },
       "combiners":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"string" ,
               "enum":[
                 "confidence", "probability", "probability_weighted", "plurality", "confidence_weighted"
               ]
             },
             {
               "type":"object",
               "properties":{
                 "class":{
                   "type":"string",
                   "description":"Category to be considered the positive class"
                 },
                 "k":{
                   "type":"integer",
                   "description":"Minimum number of occurrences of positive class"
                 },
                 "kind":{
                   "type":"string" ,
                   "enum":[
                     "threshold"
                   ]
                 }
               },
               "required":[
                 "k", "kind"
               ]
             }
           ]
         },
         "description":"A list of combiner instances"
       },
       "confidence":{
         "type":"boolean",
         "description":"Whether to include the confidence of each prediction"
       },
       "confidence_bounds":{
         "type":"boolean",
         "description":"Whether to include confidence bounds"
       },
       "confidence_interval_name":{
         "type":"string",
         "default": "confidence interval",
         "description":"Name for confidence interval in the header"
       },
       "confidence_name":{
         "type":"string",
         "default": "confidence",
         "description":"Name for the confidence column in header"
       },
       "dataset_id":{
         "type":"string",
         "description":"Identifier of this model's main dataset"
       },
       "dataset_ids":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Identifiers of this model's additional datasets"
       },
       "default_numeric_value":{
         "type":"string" ,
         "enum":[
           "mean", "maximum", "minimum", "zero", "median"
         ],
         "description":"Catch-all missing filler for numeric fields."
       },
       "default_values":{
         "type":"object",
         "description":"A map for field identifiers to values for missing entries."
       },
       "discretization":{
         "type":"object",
         "properties":{
           "pretty":{
             "type":"boolean",
             "default": true,
             "description":"Whether edge boundaries are rounded values"
           },
           "size":{
             "type":"integer",
             "minimum":1,
             "default": 5,
             "description":"Number of bins to create"
           },
           "trim":{
             "type":"number",
             "minimum":0,
             "maximum":0.1,
             "default": 0.0,
             "description":"Proportion of data to trim from outer edges of distribution"
           },
           "type":{
             "type":"string" ,
             "enum":[
               "width", "population"
             ],
             "default": "population",
             "description":"Discretize into bins of equal width or population"
           }
         },
         "additionalProperties": false,
         "description":"Parameters to control the discetization of numeric fields"
       },
       "field_codings":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "coding":{
               "type":"string" ,
               "enum":[
                 "dummy", "contrast", "other"
               ],
               "description":"Type of coding"
             },
             "coefficients":{
               "type":"array" ,
               "items":{
                 "type":"array" ,
                 "items":{
                   "type":"number"
                 }
               },
               "description":"Coefficients for contrast or other coding"
             },
             "dummy_class":{
               "type":"string",
               "description":"Class value for dummy coding"
             },
             "field":{
               "type":"string",
               "description":"Identifier or name of field to be coded"
             }
           },
           "required":[
             "coding", "field"
           ],
           "additionalProperties": false
         },
         "description":"Coding of categorical variables"
       },
       "field_discretizations":{
         "type":"object",
         "additionalProperties": false,
         "description":"Per-field discretization parameters"
       },
       "fields":{
         "anyOf":[
           {
             "type":"object",
             "additionalProperties": false
           },
           {
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "numeric"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "bins":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                         },
                         "counts":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                         },
                         "kurtosis":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample kurtosis for numeric fields"
                         },
                         "maximum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Maximum value for numeric fields"
                         },
                         "mean":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample mean for numeric fields"
                         },
                         "median":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The approximate median for numeric fields"
                         },
                         "minimum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Minimum value for numeric fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "population":{
                           "type":"integer",
                           "description":"# of instances containing data for this field"
                         },
                         "skewness":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample skewness for numeric fields"
                         },
                         "standard_deviation":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample standard deviation for numeric fields"
                         },
                         "sum":{
                           "type":"number",
                           "description":"Sum of values (for mean calculation)"
                         },
                         "sum_squares":{
                           "type":"number",
                           "description":"Sum of squared values (for variance calculation)"
                         },
                         "variance":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample variance for numeric fields"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "text"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "tag_cloud":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top terms with number of occurences"
                         },
                         "term_forms":{
                           "type":"object",
                           "description":"Dictionary of multi-form terms to all forms seen"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "datetime"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "maximum":{
                           "type":"string",
                           "description":"Maximum datetime, as a string value"
                         },
                         "maximum_timestamp":{
                           "type":"integer",
                           "description":"Maximum datetime, as a numeric epoch"
                         },
                         "minimum":{
                           "type":"string",
                           "description":"Minimum datetime, as a string value"
                         },
                         "minimum_timestamp":{
                           "type":"integer",
                           "description":"Minimum datetime, as a numeric epoch"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "non_decreasing":{
                           "type":"boolean",
                           "description":"True if times never decrease with row number"
                         },
                         "non_increasing":{
                           "type":"boolean",
                           "description":"True if times never increase with row number"
                         }
                       },
                       "additionalProperties": false
                     },
                     "time_formats":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Formats of times in this field from clj-time"
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "item_analysis":{
                       "type":"object",
                       "properties":{
                         "limit":{
                           "type":"number",
                           "minimum":1,
                           "default": 10000,
                           "description":"Maximum number of items considered."
                         },
                         "pruning_strategy":{
                           "type":"string" ,
                           "enum":[
                             "nearest_to_frequency", "most_frequent"
                           ],
                           "default": "nearest_to_frequency",
                           "description":"Strategy used to select items when item_limit is surpassed"
                         },
                         "separator":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                         },
                         "separator_regexp":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Regular expression delimiting items in the field. Overrides item_separator."
                         },
                         "target_frequency":{
                           "type":"number",
                           "minimum":0,
                           "maximum":1,
                           "default": 0.3333333333333333,
                           "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                         }
                       },
                       "description":"Parameters controlling how items are extracted from text"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "items"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "items":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top items with number of occurences"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "categorical"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "categories":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"The possible categories for categorical fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 }
               ]
             }
           }
         ],
         "description":"Possibly partial list of descriptors for fields used in the model"
       },
       "fields_map":{
         "type":"object",
         "description":"Mapping of dataset field ids to model field id"
       },
       "fields_maps":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "additionalProperties": false
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "additionalProperties": false
                 }
               ]
             }
           ]
         },
         "description":"List of maps per dataset in dataset_ids"
       },
       "header":{
         "type":"boolean",
         "description":"Whether to include a header with field names"
       },
       "importance":{
         "type":"boolean",
         "description":"Whether to include the field importance scores (iforest)"
       },
       "kind":{
         "type":"string" ,
         "enum":[
           "batch"
         ],
         "description":"The kind of this message's body"
       },
       "locale":{
         "type":"string",
         "description":"Default locale for field value"
       },
       "missing_strategies":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":[
             {
               "type":"string"
             },
             {
               "type":"string" ,
               "enum":[
                 "last_prediction", "proportional"
               ]
             }
           ]
         },
         "description":"List of two-element arrays, where the first is a model ID and the second is a missing_strategy; to be used with model_ids"
       },
       "missing_strategy":{
         "type":"string" ,
         "enum":[
           "last_prediction", "proportional"
         ],
         "default": "last_prediction",
         "description":"A missing strategy to supplant that of all models"
       },
       "missing_tokens":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "default": [],
         "description":"Default tokens that represent a missing value"
       },
       "missing_value":{
         "type":"string",
         "default": "-",
         "description":"String to be used to denote 'no prediction'"
       },
       "model_id":{
         "type":"string",
         "description":"Identifier of the model evaluated"
       },
       "model_ids":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Identifiers of the models to be evaluated, combining their predictions with the combiners specified by :combiner or :combiners"
       },
       "newline":{
         "type":"string" ,
         "enum":[
           "LF", "CRLF", "crlf", "lf"
         ],
         "default": "lf",
         "description":"Newline character: either lf (default) or crlf"
       },
       "node_id":{
         "type":"boolean",
         "description":"Whether to include tree node ids (single trees only)"
       },
       "objective_field":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "anyOf":[
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "numeric"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "bins":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"number"
                             },
                             {
                               "type":"integer"
                             }
                           ]
                         },
                         "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                       },
                       "counts":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"number"
                             },
                             {
                               "type":"integer"
                             }
                           ]
                         },
                         "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                       },
                       "kurtosis":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample kurtosis for numeric fields"
                       },
                       "maximum":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"Maximum value for numeric fields"
                       },
                       "mean":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample mean for numeric fields"
                       },
                       "median":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The approximate median for numeric fields"
                       },
                       "minimum":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"Minimum value for numeric fields"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "population":{
                         "type":"integer",
                         "description":"# of instances containing data for this field"
                       },
                       "skewness":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample skewness for numeric fields"
                       },
                       "standard_deviation":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample standard deviation for numeric fields"
                       },
                       "sum":{
                         "type":"number",
                         "description":"Sum of values (for mean calculation)"
                       },
                       "sum_squares":{
                         "type":"number",
                         "description":"Sum of squared values (for variance calculation)"
                       },
                       "variance":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"number"
                           }
                         ],
                         "description":"The sample variance for numeric fields"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "text"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "average_length":{
                         "type":"number",
                         "description":"The average # of chars for non-missing values"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "tag_cloud":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"Top terms with number of occurences"
                       },
                       "term_forms":{
                         "type":"object",
                         "description":"Dictionary of multi-form terms to all forms seen"
                       }
                     }
                   },
                   "term_analysis":{
                     "type":"object",
                     "properties":{
                       "bigrams":{
                         "type":"boolean",
                         "description":"Allow terms to be bigrams"
                       },
                       "case_sensitive":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis is case sensitive"
                       },
                       "enabled":{
                         "type":"boolean",
                         "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                       },
                       "excluded_terms":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of terms to ignore when performing term analysis"
                       },
                       "language":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                             ]
                           }
                         ],
                         "default": "none",
                         "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                       },
                       "ngrams":{
                         "type":"integer",
                         "minimum":1,
                         "description":"The maximum length of consecutive tokens to consider as terms"
                       },
                       "stem_words":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis stems words"
                       },
                       "stopword_diligence":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "light", "aggressive", "normal"
                             ]
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       },
                       "stopword_removal":{
                         "type":"string" ,
                         "enum":[
                           "none", "all_languages", "selected_language"
                         ],
                         "description":"Remove words that are stopwords in any language."
                       },
                       "term_filters":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string" ,
                               "enum":[
                                 "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                               ]
                             }
                           }
                         ],
                         "description":"A list of filters to apply when choosing the termset"
                       },
                       "term_regexps":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of regular expressions to consider as terms"
                       },
                       "token_mode":{
                         "type":"string" ,
                         "enum":[
                           "full_terms_only", "tokens_only", "all"
                         ],
                         "default": "all",
                         "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                       },
                       "use_stopwords":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "datetime"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "maximum":{
                         "type":"string",
                         "description":"Maximum datetime, as a string value"
                       },
                       "maximum_timestamp":{
                         "type":"integer",
                         "description":"Maximum datetime, as a numeric epoch"
                       },
                       "minimum":{
                         "type":"string",
                         "description":"Minimum datetime, as a string value"
                       },
                       "minimum_timestamp":{
                         "type":"integer",
                         "description":"Minimum datetime, as a numeric epoch"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       },
                       "non_decreasing":{
                         "type":"boolean",
                         "description":"True if times never decrease with row number"
                       },
                       "non_increasing":{
                         "type":"boolean",
                         "description":"True if times never increase with row number"
                       }
                     },
                     "additionalProperties": false
                   },
                   "time_formats":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Formats of times in this field from clj-time"
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "item_analysis":{
                     "type":"object",
                     "properties":{
                       "limit":{
                         "type":"number",
                         "minimum":1,
                         "default": 10000,
                         "description":"Maximum number of items considered."
                       },
                       "pruning_strategy":{
                         "type":"string" ,
                         "enum":[
                           "nearest_to_frequency", "most_frequent"
                         ],
                         "default": "nearest_to_frequency",
                         "description":"Strategy used to select items when item_limit is surpassed"
                       },
                       "separator":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string"
                           }
                         ],
                         "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                       },
                       "separator_regexp":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string"
                           }
                         ],
                         "description":"Regular expression delimiting items in the field. Overrides item_separator."
                       },
                       "target_frequency":{
                         "type":"number",
                         "minimum":0,
                         "maximum":1,
                         "default": 0.3333333333333333,
                         "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                       }
                     },
                     "description":"Parameters controlling how items are extracted from text"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "items"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "average_length":{
                         "type":"number",
                         "description":"The average # of chars for non-missing values"
                       },
                       "items":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"Top items with number of occurences"
                       }
                     }
                   }
                 }
               },
               {
                 "type":"object",
                 "properties":{
                   "auto_generated":{
                     "type":"boolean",
                     "description":"True if the field was generated from another field"
                   },
                   "child_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the children if this generates other fields"
                   },
                   "column_number":{
                     "type":"integer",
                     "minimum":0,
                     "description":"Column from the data source"
                   },
                   "datatype":{
                     "type":"string" ,
                     "enum":[
                       "string"
                     ],
                     "description":"The storage type of the field"
                   },
                   "description":{
                     "type":"string",
                     "description":"Free text description of the field"
                   },
                   "label":{
                     "type":"string",
                     "description":"A label for the field (free text for use by clients)"
                   },
                   "locale":{
                     "type":"string",
                     "description":"Overrides global locale"
                   },
                   "missing_tokens":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"Overrides global missing tokens"
                   },
                   "name":{
                     "type":"string",
                     "description":"Name for the field"
                   },
                   "optype":{
                     "type":"string" ,
                     "enum":[
                       "categorical"
                     ],
                     "description":"Operational type of this field"
                   },
                   "parent_ids":{
                     "type":"array" ,
                     "items":{
                       "type":"string"
                     },
                     "description":"IDs of the parents if this is a generated field"
                   },
                   "preferred":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "default": true,
                     "description":"Whether the field is used by default for model creation"
                   },
                   "provenance":{
                     "type":"string" ,
                     "enum":[
                       "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                     ],
                     "description":"Field value origin (when the value is generated)"
                   },
                   "summary":{
                     "type":"object",
                     "properties":{
                       "categories":{
                         "type":"array" ,
                         "items":{
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string"
                             },
                             {
                               "type":"number"
                             }
                           ]
                         },
                         "description":"The possible categories for categorical fields"
                       },
                       "missing_count":{
                         "type":"integer",
                         "description":"# of missing instances"
                       }
                     }
                   },
                   "term_analysis":{
                     "type":"object",
                     "properties":{
                       "bigrams":{
                         "type":"boolean",
                         "description":"Allow terms to be bigrams"
                       },
                       "case_sensitive":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis is case sensitive"
                       },
                       "enabled":{
                         "type":"boolean",
                         "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                       },
                       "excluded_terms":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of terms to ignore when performing term analysis"
                       },
                       "language":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                             ]
                           }
                         ],
                         "default": "none",
                         "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                       },
                       "ngrams":{
                         "type":"integer",
                         "minimum":1,
                         "description":"The maximum length of consecutive tokens to consider as terms"
                       },
                       "stem_words":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis stems words"
                       },
                       "stopword_diligence":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"string" ,
                             "enum":[
                               "light", "aggressive", "normal"
                             ]
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       },
                       "stopword_removal":{
                         "type":"string" ,
                         "enum":[
                           "none", "all_languages", "selected_language"
                         ],
                         "description":"Remove words that are stopwords in any language."
                       },
                       "term_filters":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string" ,
                               "enum":[
                                 "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                               ]
                             }
                           }
                         ],
                         "description":"A list of filters to apply when choosing the termset"
                       },
                       "term_regexps":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "type":"string"
                             }
                           }
                         ],
                         "description":"A list of regular expressions to consider as terms"
                       },
                       "token_mode":{
                         "type":"string" ,
                         "enum":[
                           "full_terms_only", "tokens_only", "all"
                         ],
                         "default": "all",
                         "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                       },
                       "use_stopwords":{
                         "anyOf":[
                           {
                             "type":"null"
                           },
                           {
                             "type":"boolean"
                           }
                         ],
                         "description":"Defines whether the term analysis uses stop words"
                       }
                     }
                   }
                 }
               }
             ]
           }
         ],
         "description":"Objective field (target) identifier.  Gets added to objective_fields. Useful for models with a single objective field."
       },
       "objective_field_descriptor":{
         "anyOf":[
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "numeric"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "bins":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"integer"
                         }
                       ]
                     },
                     "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                   },
                   "counts":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"integer"
                         }
                       ]
                     },
                     "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                   },
                   "kurtosis":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample kurtosis for numeric fields"
                   },
                   "maximum":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"Maximum value for numeric fields"
                   },
                   "mean":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample mean for numeric fields"
                   },
                   "median":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The approximate median for numeric fields"
                   },
                   "minimum":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"Minimum value for numeric fields"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "population":{
                     "type":"integer",
                     "description":"# of instances containing data for this field"
                   },
                   "skewness":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample skewness for numeric fields"
                   },
                   "standard_deviation":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample standard deviation for numeric fields"
                   },
                   "sum":{
                     "type":"number",
                     "description":"Sum of values (for mean calculation)"
                   },
                   "sum_squares":{
                     "type":"number",
                     "description":"Sum of squared values (for variance calculation)"
                   },
                   "variance":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"number"
                       }
                     ],
                     "description":"The sample variance for numeric fields"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "text"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "average_length":{
                     "type":"number",
                     "description":"The average # of chars for non-missing values"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "tag_cloud":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"Top terms with number of occurences"
                   },
                   "term_forms":{
                     "type":"object",
                     "description":"Dictionary of multi-form terms to all forms seen"
                   }
                 }
               },
               "term_analysis":{
                 "type":"object",
                 "properties":{
                   "bigrams":{
                     "type":"boolean",
                     "description":"Allow terms to be bigrams"
                   },
                   "case_sensitive":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis is case sensitive"
                   },
                   "enabled":{
                     "type":"boolean",
                     "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                   },
                   "excluded_terms":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of terms to ignore when performing term analysis"
                   },
                   "language":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                         ]
                       }
                     ],
                     "default": "none",
                     "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                   },
                   "ngrams":{
                     "type":"integer",
                     "minimum":1,
                     "description":"The maximum length of consecutive tokens to consider as terms"
                   },
                   "stem_words":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis stems words"
                   },
                   "stopword_diligence":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "light", "aggressive", "normal"
                         ]
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   },
                   "stopword_removal":{
                     "type":"string" ,
                     "enum":[
                       "none", "all_languages", "selected_language"
                     ],
                     "description":"Remove words that are stopwords in any language."
                   },
                   "term_filters":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string" ,
                           "enum":[
                             "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                           ]
                         }
                       }
                     ],
                     "description":"A list of filters to apply when choosing the termset"
                   },
                   "term_regexps":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of regular expressions to consider as terms"
                   },
                   "token_mode":{
                     "type":"string" ,
                     "enum":[
                       "full_terms_only", "tokens_only", "all"
                     ],
                     "default": "all",
                     "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                   },
                   "use_stopwords":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "datetime"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "maximum":{
                     "type":"string",
                     "description":"Maximum datetime, as a string value"
                   },
                   "maximum_timestamp":{
                     "type":"integer",
                     "description":"Maximum datetime, as a numeric epoch"
                   },
                   "minimum":{
                     "type":"string",
                     "description":"Minimum datetime, as a string value"
                   },
                   "minimum_timestamp":{
                     "type":"integer",
                     "description":"Minimum datetime, as a numeric epoch"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   },
                   "non_decreasing":{
                     "type":"boolean",
                     "description":"True if times never decrease with row number"
                   },
                   "non_increasing":{
                     "type":"boolean",
                     "description":"True if times never increase with row number"
                   }
                 },
                 "additionalProperties": false
               },
               "time_formats":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Formats of times in this field from clj-time"
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "item_analysis":{
                 "type":"object",
                 "properties":{
                   "limit":{
                     "type":"number",
                     "minimum":1,
                     "default": 10000,
                     "description":"Maximum number of items considered."
                   },
                   "pruning_strategy":{
                     "type":"string" ,
                     "enum":[
                       "nearest_to_frequency", "most_frequent"
                     ],
                     "default": "nearest_to_frequency",
                     "description":"Strategy used to select items when item_limit is surpassed"
                   },
                   "separator":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string"
                       }
                     ],
                     "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                   },
                   "separator_regexp":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string"
                       }
                     ],
                     "description":"Regular expression delimiting items in the field. Overrides item_separator."
                   },
                   "target_frequency":{
                     "type":"number",
                     "minimum":0,
                     "maximum":1,
                     "default": 0.3333333333333333,
                     "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                   }
                 },
                 "description":"Parameters controlling how items are extracted from text"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "items"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "average_length":{
                     "type":"number",
                     "description":"The average # of chars for non-missing values"
                   },
                   "items":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"Top items with number of occurences"
                   }
                 }
               }
             }
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string" ,
                 "enum":[
                   "string"
                 ],
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "optype":{
                 "type":"string" ,
                 "enum":[
                   "categorical"
                 ],
                 "description":"Operational type of this field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               },
               "summary":{
                 "type":"object",
                 "properties":{
                   "categories":{
                     "type":"array" ,
                     "items":{
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string"
                         },
                         {
                           "type":"number"
                         }
                       ]
                     },
                     "description":"The possible categories for categorical fields"
                   },
                   "missing_count":{
                     "type":"integer",
                     "description":"# of missing instances"
                   }
                 }
               },
               "term_analysis":{
                 "type":"object",
                 "properties":{
                   "bigrams":{
                     "type":"boolean",
                     "description":"Allow terms to be bigrams"
                   },
                   "case_sensitive":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis is case sensitive"
                   },
                   "enabled":{
                     "type":"boolean",
                     "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                   },
                   "excluded_terms":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of terms to ignore when performing term analysis"
                   },
                   "language":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                         ]
                       }
                     ],
                     "default": "none",
                     "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                   },
                   "ngrams":{
                     "type":"integer",
                     "minimum":1,
                     "description":"The maximum length of consecutive tokens to consider as terms"
                   },
                   "stem_words":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis stems words"
                   },
                   "stopword_diligence":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"string" ,
                         "enum":[
                           "light", "aggressive", "normal"
                         ]
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   },
                   "stopword_removal":{
                     "type":"string" ,
                     "enum":[
                       "none", "all_languages", "selected_language"
                     ],
                     "description":"Remove words that are stopwords in any language."
                   },
                   "term_filters":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string" ,
                           "enum":[
                             "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                           ]
                         }
                       }
                     ],
                     "description":"A list of filters to apply when choosing the termset"
                   },
                   "term_regexps":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "type":"string"
                         }
                       }
                     ],
                     "description":"A list of regular expressions to consider as terms"
                   },
                   "token_mode":{
                     "type":"string" ,
                     "enum":[
                       "full_terms_only", "tokens_only", "all"
                     ],
                     "default": "all",
                     "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                   },
                   "use_stopwords":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"boolean"
                       }
                     ],
                     "description":"Defines whether the term analysis uses stop words"
                   }
                 }
               }
             }
           }
         ],
         "description":"The full descriptor of the objective field, when there's only one."
       },
       "objective_fields":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Collection of objective field identifiers (targets)"
       },
       "objective_weights":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":[
             {
               "type":"string"
             },
             {
               "type":"number"
             }
           ]
         },
         "description":"For classification models, this maps the objective classes to class weights"
       },
       "operating_kind":{
         "type":"string" ,
         "enum":[
           "confidence", "probability", "votes"
         ],
         "default": "probability",
         "description":"How the model is used to compute predictions"
       },
       "operating_point":{
         "type":"object",
         "properties":{
           "kind":{
             "type":"string" ,
             "enum":[
               "confidence", "probability", "votes"
             ],
             "default": "probability",
             "description":"Kind of threshold to apply"
           },
           "positive_class":{
             "type":"string",
             "description":"The class the threshold applies to"
           },
           "threshold":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"Numerical value of the threshold"
           }
         },
         "required":[
           "threshold"
         ],
         "additionalProperties": false,
         "description":"An operating point to perform predictions based on a threshold"
       },
       "operating_points":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "kind":{
               "type":"string" ,
               "enum":[
                 "confidence", "probability", "votes"
               ],
               "default": "probability",
               "description":"Kind of threshold to apply"
             },
             "positive_class":{
               "type":"string",
               "description":"The class the threshold applies to"
             },
             "threshold":{
               "type":"number",
               "minimum":0,
               "maximum":1,
               "description":"Numerical value of the threshold"
             }
           },
           "required":[
             "threshold"
           ],
           "additionalProperties": false
         },
         "description":"A list of operating points to perform predictions based   on thresholds."
       },
       "ordering":{
         "type":"string" ,
         "enum":[
           "random", "linear", "deterministic"
         ],
         "default": "deterministic"
       },
       "output_callbacks":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "address":{
               "type":"string",
               "description":"For MSG callbacks, the mailbox address to use"
             },
             "delay":{
               "type":"integer",
               "description":"Seed for an initial random delay before first call, in millisecs.  The actual delay is this value plus a random number in [0, 1000)"
             },
             "fire_once":{
               "type":"boolean",
               "description":"A flag specifying whether callbacks should be called at most once, even if the job is requeued and retraces previous states"
             },
             "method":{
               "type":"string" ,
               "enum":[
                 "DELETE", "delete", "put", "msg", "post", "MSG", "POST", "GET", "get", "PUT"
               ],
               "default": "GET",
               "description":"The HTTP method to use"
             },
             "order":{
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"integer",
                   "minimum":0
                 }
               ],
               "description":"Trigger ordering.  Smaller (or nil) orders are triggered first, with progress callbacks taking preference over state callbacks.  Synchronous and asynchronous callbacks are ordered independently.  Callbacks with the same order, states and synchronicity are triggered in the order they are received."
             },
             "payload":{
               "type":"object",
               "description":"The payload to be used as a message body"
             },
             "progress_variation":{
               "type":"number",
               "exclusiveMinimum":0,
               "exclusiveMaximum":1,
               "description":"A number in (0, 1) which gives the variation in progress that will trigger this callback."
             },
             "register-address":{
               "type":"boolean",
               "description":"For MSG callbacks, whether to register the requested address if it does not yet exist (i.e., whether to create the associated message queue when the mailbox is RabbitMQ)"
             },
             "retries":{
               "type":"integer",
               "description":"Number of times the callback is retried on failures"
             },
             "retry_delay":{
               "type":"integer",
               "default": 1000,
               "description":"Seed for a exponential back-off between retries, in millisecs"
             },
             "states":{
               "type":"array" ,
               "items":{
                 "type":"string"
               },
               "description":"A list of states for which the callback should be called. If not given, the callback will be called for either the given progress variation or, if that's not provided, for all state changes"
             },
             "synchronous":{
               "type":"boolean",
               "description":"A flag specifying wether the callback is synchronous and we need to wait for a remote response before proceeding"
             },
             "timeout":{
               "type":"integer",
               "default": 30000,
               "description":"Lapse in millisecs waiting for the callback to get a response"
             },
             "url":{
               "type":"string",
               "description":"The URL to invoke with the method above"
             }
           },
           "required":[
             "url"
           ]
         },
         "description":"List of callbacks for the generated dataset"
       },
       "output_dataset":{
         "type":"boolean",
         "description":"Whether to create a dataset from the result"
       },
       "output_dataset_id":{
         "type":"string",
         "description":"The identifier of the generated dataset"
       },
       "output_dataset_location":{
         "type":"string",
         "description":"The location of the generated dataset"
       },
       "output_fields":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "default": [],
         "description":"List of identifiers of fields to include in output"
       },
       "output_file":{
         "type":"string",
         "description":"Name of the file to store the output"
       },
       "output_store":{
         "type":"string",
         "description":"Full URI to the store where the final output file will be stored"
       },
       "prediction_interval_name":{
         "type":"string",
         "default": "prediction interval",
         "description":"Name for prediction interval in the header"
       },
       "prediction_name":{
         "type":"string",
         "description":"Name for the prediction column in header"
       },
       "predictor_params":{
         "type":"object",
         "properties":{
           "max_components":{
             "type":"integer",
             "minimum":1,
             "description":"PCA dimensions"
           },
           "variance_threshold":{
             "type":"number",
             "minimum":0,
             "maximum":1,
             "description":"PCA variance threshold"
           }
         },
         "additionalProperties": false,
         "description":"Additional parameters to pass to predictor"
       },
       "preview":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":{
             "type":"string"
           }
         },
         "description":"A preview of the output initial rows, as a list of lists of strings"
       },
       "preview_rows":{
         "type":"integer",
         "minimum":0,
         "description":"Maximum number of preview rows in response"
       },
       "probabilities":{
         "type":"boolean",
         "description":"Whether to include class probabilities in classification predictions"
       },
       "probability":{
         "type":"boolean",
         "description":"Whether to include the probability of the predicted class in classification predictions (when the model supports it)"
       },
       "probability_name":{
         "type":"string",
         "default": "probability",
         "description":"Name for the confidence column in header"
       },
       "row_range":{
         "type":"object",
         "properties":{
           "size":{
             "type":"integer",
             "minimum":0
           },
           "start":{
             "type":"integer",
             "minimum":0
           }
         },
         "description":"Rows used to build this object"
       },
       "row_ranges":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Rows used to build this object, per dataset"
       },
       "sample":{
         "type":"object",
         "properties":{
           "out_of_bag":{
             "type":"boolean",
             "description":"Is the sampling out of bag?"
           },
           "rate":{
             "type":"number",
             "minimum":0,
             "default": 1.0,
             "description":"The rate: fraction of rows we pick"
           },
           "replace":{
             "type":"boolean",
             "description":"Whether we sample with replacement or not"
           },
           "seed":{
             "anyOf":[
               {
                 "type":"number"
               },
               {
                 "type":"string"
               }
             ],
             "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
           }
         },
         "description":"Sampling of input rows used to build this object"
       },
       "samples":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Sampling of rows used to build this object, per dataset"
       },
       "separator":{
         "type":"string",
         "default": ",",
         "description":"Separator to use for the output CSV (only the first character is used)"
       },
       "votes":{
         "type":"boolean",
         "description":"Whether to include predictions (and confidences, if `confidence` is requested) for each individual model"
       },
       "weight_field":{
         "type":"string",
         "description":"Weight field identifier"
       }
     },
     "required":[
       "kind"
     ]
   }
 },
 "required":[
   "prediction"
 ],
 "additionalProperties": false
}