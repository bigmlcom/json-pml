{
 "type":"object",
 "properties":{
   "sample":{
     "type":"object",
     "properties":{
       "callbacks":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "address":{
               "type":"string",
               "description":"For MSG callbacks, the mailbox address to use"
             },
             "delay":{
               "type":"integer",
               "description":"Seed for an initial random delay before first call, in millisecs.  The actual delay is this value plus a random number in [0, 1000)"
             },
             "fire_once":{
               "type":"boolean",
               "description":"A flag specifying whether callbacks should be called at most once, even if the job is requeued and retraces previous states"
             },
             "method":{
               "type":"string" ,
               "enum":[
                 "DELETE", "delete", "put", "msg", "post", "MSG", "POST", "GET", "get", "PUT"
               ],
               "default": "GET",
               "description":"The HTTP method to use"
             },
             "order":{
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"integer",
                   "minimum":0
                 }
               ],
               "description":"Trigger ordering.  Smaller (or nil) orders are triggered first, with progress callbacks taking preference over state callbacks.  Synchronous and asynchronous callbacks are ordered independently.  Callbacks with the same order, states and synchronicity are triggered in the order they are received."
             },
             "payload":{
               "type":"object",
               "description":"The payload to be used as a message body"
             },
             "progress_variation":{
               "type":"number",
               "exclusiveMinimum":0,
               "exclusiveMaximum":1,
               "description":"A number in (0, 1) which gives the variation in progress that will trigger this callback."
             },
             "register-address":{
               "type":"boolean",
               "description":"For MSG callbacks, whether to register the requested address if it does not yet exist (i.e., whether to create the associated message queue when the mailbox is RabbitMQ)"
             },
             "retries":{
               "type":"integer",
               "description":"Number of times the callback is retried on failures"
             },
             "retry_delay":{
               "type":"integer",
               "default": 1000,
               "description":"Seed for a exponential back-off between retries, in millisecs"
             },
             "states":{
               "type":"array" ,
               "items":{
                 "type":"string"
               },
               "description":"A list of states for which the callback should be called. If not given, the callback will be called for either the given progress variation or, if that's not provided, for all state changes"
             },
             "synchronous":{
               "type":"boolean",
               "description":"A flag specifying wether the callback is synchronous and we need to wait for a remote response before proceeding"
             },
             "timeout":{
               "type":"integer",
               "default": 30000,
               "description":"Lapse in millisecs waiting for the callback to get a response"
             },
             "url":{
               "type":"string",
               "description":"The URL to invoke with the method above"
             }
           },
           "required":[
             "url"
           ]
         }
       },
       "count":{
         "type":"integer",
         "minimum":0,
         "description":"The length of the rows array"
       },
       "dataset_id":{
         "type":"string",
         "description":"Dataset to be cached for subsequent sampling"
       },
       "excluded_input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of field identifiers, names or columns to exclude from inputs"
       },
       "fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"object",
               "properties":{
                 "auto_generated":{
                   "type":"boolean",
                   "description":"True if the field was generated from another field"
                 },
                 "child_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the children if this generates other fields"
                 },
                 "column_number":{
                   "type":"integer",
                   "minimum":0,
                   "description":"Column from the data source"
                 },
                 "datatype":{
                   "type":"string" ,
                   "enum":[
                     "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                   ],
                   "description":"The storage type of the field"
                 },
                 "description":{
                   "type":"string",
                   "description":"Free text description of the field"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the field (free text for use by clients)"
                 },
                 "locale":{
                   "type":"string",
                   "description":"Overrides global locale"
                 },
                 "missing_tokens":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Overrides global missing tokens"
                 },
                 "name":{
                   "type":"string",
                   "description":"Name for the field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "numeric"
                   ],
                   "description":"Operational type of this field"
                 },
                 "parent_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the parents if this is a generated field"
                 },
                 "preferred":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "default": true,
                   "description":"Whether the field is used by default for model creation"
                 },
                 "provenance":{
                   "type":"string" ,
                   "enum":[
                     "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                   ],
                   "description":"Field value origin (when the value is generated)"
                 },
                 "summary":{
                   "type":"object",
                   "properties":{
                     "bins":{
                       "type":"array" ,
                       "items":{
                         "type":"array" ,
                         "items":[
                           {
                             "type":"number"
                           },
                           {
                             "type":"integer"
                           }
                         ]
                       },
                       "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                     },
                     "counts":{
                       "type":"array" ,
                       "items":{
                         "type":"array" ,
                         "items":[
                           {
                             "type":"number"
                           },
                           {
                             "type":"integer"
                           }
                         ]
                       },
                       "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                     },
                     "kurtosis":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The sample kurtosis for numeric fields"
                     },
                     "maximum":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"Maximum value for numeric fields"
                     },
                     "mean":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The sample mean for numeric fields"
                     },
                     "median":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The approximate median for numeric fields"
                     },
                     "minimum":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"Minimum value for numeric fields"
                     },
                     "missing_count":{
                       "type":"integer",
                       "description":"# of missing instances"
                     },
                     "population":{
                       "type":"integer",
                       "description":"# of instances containing data for this field"
                     },
                     "skewness":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The sample skewness for numeric fields"
                     },
                     "standard_deviation":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The sample standard deviation for numeric fields"
                     },
                     "sum":{
                       "type":"number",
                       "description":"Sum of values (for mean calculation)"
                     },
                     "sum_squares":{
                       "type":"number",
                       "description":"Sum of squared values (for variance calculation)"
                     },
                     "variance":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"number"
                         }
                       ],
                       "description":"The sample variance for numeric fields"
                     }
                   }
                 }
               }
             },
             {
               "type":"object",
               "properties":{
                 "auto_generated":{
                   "type":"boolean",
                   "description":"True if the field was generated from another field"
                 },
                 "child_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the children if this generates other fields"
                 },
                 "column_number":{
                   "type":"integer",
                   "minimum":0,
                   "description":"Column from the data source"
                 },
                 "datatype":{
                   "type":"string" ,
                   "enum":[
                     "string"
                   ],
                   "description":"The storage type of the field"
                 },
                 "description":{
                   "type":"string",
                   "description":"Free text description of the field"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the field (free text for use by clients)"
                 },
                 "locale":{
                   "type":"string",
                   "description":"Overrides global locale"
                 },
                 "missing_tokens":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Overrides global missing tokens"
                 },
                 "name":{
                   "type":"string",
                   "description":"Name for the field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "text"
                   ],
                   "description":"Operational type of this field"
                 },
                 "parent_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the parents if this is a generated field"
                 },
                 "preferred":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "default": true,
                   "description":"Whether the field is used by default for model creation"
                 },
                 "provenance":{
                   "type":"string" ,
                   "enum":[
                     "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                   ],
                   "description":"Field value origin (when the value is generated)"
                 },
                 "summary":{
                   "type":"object",
                   "properties":{
                     "average_length":{
                       "type":"number",
                       "description":"The average # of chars for non-missing values"
                     },
                     "missing_count":{
                       "type":"integer",
                       "description":"# of missing instances"
                     },
                     "tag_cloud":{
                       "type":"array" ,
                       "items":{
                         "type":"array" ,
                         "items":[
                           {
                             "type":"string"
                           },
                           {
                             "type":"number"
                           }
                         ]
                       },
                       "description":"Top terms with number of occurences"
                     },
                     "term_forms":{
                       "type":"object",
                       "description":"Dictionary of multi-form terms to all forms seen"
                     }
                   }
                 },
                 "term_analysis":{
                   "type":"object",
                   "properties":{
                     "bigrams":{
                       "type":"boolean",
                       "description":"Allow terms to be bigrams"
                     },
                     "case_sensitive":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis is case sensitive"
                     },
                     "enabled":{
                       "type":"boolean",
                       "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                     },
                     "excluded_terms":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of terms to ignore when performing term analysis"
                     },
                     "language":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                           ]
                         }
                       ],
                       "default": "none",
                       "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                     },
                     "ngrams":{
                       "type":"integer",
                       "minimum":1,
                       "description":"The maximum length of consecutive tokens to consider as terms"
                     },
                     "stem_words":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis stems words"
                     },
                     "stopword_diligence":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "light", "aggressive", "normal"
                           ]
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     },
                     "stopword_removal":{
                       "type":"string" ,
                       "enum":[
                         "none", "all_languages", "selected_language"
                       ],
                       "description":"Remove words that are stopwords in any language."
                     },
                     "term_filters":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string" ,
                             "enum":[
                               "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                             ]
                           }
                         }
                       ],
                       "description":"A list of filters to apply when choosing the termset"
                     },
                     "term_regexps":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of regular expressions to consider as terms"
                     },
                     "token_mode":{
                       "type":"string" ,
                       "enum":[
                         "full_terms_only", "tokens_only", "all"
                       ],
                       "default": "all",
                       "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                     },
                     "use_stopwords":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     }
                   }
                 }
               }
             },
             {
               "type":"object",
               "properties":{
                 "auto_generated":{
                   "type":"boolean",
                   "description":"True if the field was generated from another field"
                 },
                 "child_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the children if this generates other fields"
                 },
                 "column_number":{
                   "type":"integer",
                   "minimum":0,
                   "description":"Column from the data source"
                 },
                 "datatype":{
                   "type":"string" ,
                   "enum":[
                     "string"
                   ],
                   "description":"The storage type of the field"
                 },
                 "description":{
                   "type":"string",
                   "description":"Free text description of the field"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the field (free text for use by clients)"
                 },
                 "locale":{
                   "type":"string",
                   "description":"Overrides global locale"
                 },
                 "missing_tokens":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Overrides global missing tokens"
                 },
                 "name":{
                   "type":"string",
                   "description":"Name for the field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "datetime"
                   ],
                   "description":"Operational type of this field"
                 },
                 "parent_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the parents if this is a generated field"
                 },
                 "preferred":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "default": true,
                   "description":"Whether the field is used by default for model creation"
                 },
                 "provenance":{
                   "type":"string" ,
                   "enum":[
                     "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                   ],
                   "description":"Field value origin (when the value is generated)"
                 },
                 "summary":{
                   "type":"object",
                   "properties":{
                     "maximum":{
                       "type":"string",
                       "description":"Maximum datetime, as a string value"
                     },
                     "maximum_timestamp":{
                       "type":"integer",
                       "description":"Maximum datetime, as a numeric epoch"
                     },
                     "minimum":{
                       "type":"string",
                       "description":"Minimum datetime, as a string value"
                     },
                     "minimum_timestamp":{
                       "type":"integer",
                       "description":"Minimum datetime, as a numeric epoch"
                     },
                     "missing_count":{
                       "type":"integer",
                       "description":"# of missing instances"
                     },
                     "non_decreasing":{
                       "type":"boolean",
                       "description":"True if times never decrease with row number"
                     },
                     "non_increasing":{
                       "type":"boolean",
                       "description":"True if times never increase with row number"
                     }
                   },
                   "additionalProperties": false
                 },
                 "time_formats":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Formats of times in this field from clj-time"
                 }
               }
             },
             {
               "type":"object",
               "properties":{
                 "auto_generated":{
                   "type":"boolean",
                   "description":"True if the field was generated from another field"
                 },
                 "child_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the children if this generates other fields"
                 },
                 "column_number":{
                   "type":"integer",
                   "minimum":0,
                   "description":"Column from the data source"
                 },
                 "datatype":{
                   "type":"string" ,
                   "enum":[
                     "string"
                   ],
                   "description":"The storage type of the field"
                 },
                 "description":{
                   "type":"string",
                   "description":"Free text description of the field"
                 },
                 "item_analysis":{
                   "type":"object",
                   "properties":{
                     "limit":{
                       "type":"number",
                       "minimum":1,
                       "default": 10000,
                       "description":"Maximum number of items considered."
                     },
                     "pruning_strategy":{
                       "type":"string" ,
                       "enum":[
                         "nearest_to_frequency", "most_frequent"
                       ],
                       "default": "nearest_to_frequency",
                       "description":"Strategy used to select items when item_limit is surpassed"
                     },
                     "separator":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                     },
                     "separator_regexp":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"Regular expression delimiting items in the field. Overrides item_separator."
                     },
                     "target_frequency":{
                       "type":"number",
                       "minimum":0,
                       "maximum":1,
                       "default": 0.3333333333333333,
                       "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                     }
                   },
                   "description":"Parameters controlling how items are extracted from text"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the field (free text for use by clients)"
                 },
                 "locale":{
                   "type":"string",
                   "description":"Overrides global locale"
                 },
                 "missing_tokens":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Overrides global missing tokens"
                 },
                 "name":{
                   "type":"string",
                   "description":"Name for the field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "items"
                   ],
                   "description":"Operational type of this field"
                 },
                 "parent_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the parents if this is a generated field"
                 },
                 "preferred":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "default": true,
                   "description":"Whether the field is used by default for model creation"
                 },
                 "provenance":{
                   "type":"string" ,
                   "enum":[
                     "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                   ],
                   "description":"Field value origin (when the value is generated)"
                 },
                 "summary":{
                   "type":"object",
                   "properties":{
                     "average_length":{
                       "type":"number",
                       "description":"The average # of chars for non-missing values"
                     },
                     "items":{
                       "type":"array" ,
                       "items":{
                         "type":"array" ,
                         "items":[
                           {
                             "type":"string"
                           },
                           {
                             "type":"number"
                           }
                         ]
                       },
                       "description":"Top items with number of occurences"
                     }
                   }
                 }
               }
             },
             {
               "type":"object",
               "properties":{
                 "auto_generated":{
                   "type":"boolean",
                   "description":"True if the field was generated from another field"
                 },
                 "child_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the children if this generates other fields"
                 },
                 "column_number":{
                   "type":"integer",
                   "minimum":0,
                   "description":"Column from the data source"
                 },
                 "datatype":{
                   "type":"string" ,
                   "enum":[
                     "string"
                   ],
                   "description":"The storage type of the field"
                 },
                 "description":{
                   "type":"string",
                   "description":"Free text description of the field"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the field (free text for use by clients)"
                 },
                 "locale":{
                   "type":"string",
                   "description":"Overrides global locale"
                 },
                 "missing_tokens":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Overrides global missing tokens"
                 },
                 "name":{
                   "type":"string",
                   "description":"Name for the field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "categorical"
                   ],
                   "description":"Operational type of this field"
                 },
                 "parent_ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"IDs of the parents if this is a generated field"
                 },
                 "preferred":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "default": true,
                   "description":"Whether the field is used by default for model creation"
                 },
                 "provenance":{
                   "type":"string" ,
                   "enum":[
                     "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                   ],
                   "description":"Field value origin (when the value is generated)"
                 },
                 "summary":{
                   "type":"object",
                   "properties":{
                     "categories":{
                       "type":"array" ,
                       "items":{
                         "type":"array" ,
                         "items":[
                           {
                             "type":"string"
                           },
                           {
                             "type":"number"
                           }
                         ]
                       },
                       "description":"The possible categories for categorical fields"
                     },
                     "missing_count":{
                       "type":"integer",
                       "description":"# of missing instances"
                     }
                   }
                 },
                 "term_analysis":{
                   "type":"object",
                   "properties":{
                     "bigrams":{
                       "type":"boolean",
                       "description":"Allow terms to be bigrams"
                     },
                     "case_sensitive":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis is case sensitive"
                     },
                     "enabled":{
                       "type":"boolean",
                       "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                     },
                     "excluded_terms":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of terms to ignore when performing term analysis"
                     },
                     "language":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                           ]
                         }
                       ],
                       "default": "none",
                       "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                     },
                     "ngrams":{
                       "type":"integer",
                       "minimum":1,
                       "description":"The maximum length of consecutive tokens to consider as terms"
                     },
                     "stem_words":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis stems words"
                     },
                     "stopword_diligence":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "light", "aggressive", "normal"
                           ]
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     },
                     "stopword_removal":{
                       "type":"string" ,
                       "enum":[
                         "none", "all_languages", "selected_language"
                       ],
                       "description":"Remove words that are stopwords in any language."
                     },
                     "term_filters":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string" ,
                             "enum":[
                               "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                             ]
                           }
                         }
                       ],
                       "description":"A list of filters to apply when choosing the termset"
                     },
                     "term_regexps":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of regular expressions to consider as terms"
                     },
                     "token_mode":{
                       "type":"string" ,
                       "enum":[
                         "full_terms_only", "tokens_only", "all"
                       ],
                       "default": "all",
                       "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                     },
                     "use_stopwords":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     }
                   }
                 }
               }
             }
           ]
         },
         "description":"A list of fields in the dataset, in the rows order"
       },
       "input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of fields ids, in order, in the dataset"
       },
       "intercept":{
         "type":"number",
         "description":"Intercept for linear regression betwen 2 fields"
       },
       "intercepts":{
         "type":"object",
         "description":"A map from field id to linear regression intercept"
       },
       "max_rows":{
         "type":"integer",
         "minimum":0,
         "description":"Maximum number of rows in this sample"
       },
       "pearson_correlation":{
         "type":"number",
         "description":"Pearson's correlation between 2 field"
       },
       "pearson_correlations":{
         "type":"object",
         "description":"A map from field id to Pearson correlation"
       },
       "rows":{
         "type":"array" ,
         "items":{
           "type":"array" ,
           "items":{
             "anyOf":[
               {
                 "type":"null"
               },
               {
                 "anyOf":[
                   {
                     "type":"number"
                   },
                   {
                     "type":"string"
                   }
                 ]
               }
             ]
           }
         },
         "description":"A filtered subsample of the dataset"
       },
       "seed":{
         "type":"string",
         "description":"Seed used for sampling, when needed"
       },
       "slope":{
         "type":"number",
         "description":"Slope for linear regression between 2 fields"
       },
       "slopes":{
         "type":"object",
         "description":"A map from field id to linear regression slope"
       },
       "spearman_correlation":{
         "type":"number",
         "description":"Spearman's correlation between 2 fields"
       },
       "spearman_correlations":{
         "type":"object",
         "description":"A map from field id to Spearman correlation"
       }
     },
     "required":[
       "dataset_id"
     ]
   }
 },
 "required":[
   "sample"
 ],
 "additionalProperties": false
}