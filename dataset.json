{
 "type":"object",
 "properties":{
   "dataset":{
     "type":"object",
     "properties":{
       "byte_limit":{
         "type":"number",
         "minimum":0,
         "description":"Number of decompressed bytes from the source to use."
       },
       "callbacks":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "address":{
               "type":"string",
               "description":"For MSG callbacks, the mailbox address to use"
             },
             "delay":{
               "type":"integer",
               "description":"Seed for an initial random delay before first call, in millisecs.  The actual delay is this value plus a random number in [0, 1000)"
             },
             "fire_once":{
               "type":"boolean",
               "description":"A flag specifying whether callbacks should be called at most once, even if the job is requeued and retraces previous states"
             },
             "method":{
               "type":"string" ,
               "enum":[
                 "DELETE", "delete", "put", "msg", "post", "MSG", "POST", "GET", "get", "PUT"
               ],
               "default": "GET",
               "description":"The HTTP method to use"
             },
             "order":{
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"integer",
                   "minimum":0
                 }
               ],
               "description":"Trigger ordering.  Smaller (or nil) orders are triggered first, with progress callbacks taking preference over state callbacks.  Synchronous and asynchronous callbacks are ordered independently.  Callbacks with the same order, states and synchronicity are triggered in the order they are received."
             },
             "payload":{
               "type":"object",
               "description":"The payload to be used as a message body"
             },
             "progress_variation":{
               "type":"number",
               "exclusiveMinimum":0,
               "exclusiveMaximum":1,
               "description":"A number in (0, 1) which gives the variation in progress that will trigger this callback."
             },
             "register-address":{
               "type":"boolean",
               "description":"For MSG callbacks, whether to register the requested address if it does not yet exist (i.e., whether to create the associated message queue when the mailbox is RabbitMQ)"
             },
             "retries":{
               "type":"integer",
               "description":"Number of times the callback is retried on failures"
             },
             "retry_delay":{
               "type":"integer",
               "default": 1000,
               "description":"Seed for a exponential back-off between retries, in millisecs"
             },
             "states":{
               "type":"array" ,
               "items":{
                 "type":"string"
               },
               "description":"A list of states for which the callback should be called. If not given, the callback will be called for either the given progress variation or, if that's not provided, for all state changes"
             },
             "synchronous":{
               "type":"boolean",
               "description":"A flag specifying wether the callback is synchronous and we need to wait for a remote response before proceeding"
             },
             "timeout":{
               "type":"integer",
               "default": 30000,
               "description":"Lapse in millisecs waiting for the callback to get a response"
             },
             "url":{
               "type":"string",
               "description":"The URL to invoke with the method above"
             }
           },
           "required":[
             "url"
           ]
         }
       },
       "count":{
         "type":"integer",
         "minimum":0,
         "description":"Number of rows in the dataset"
       },
       "datasink":{
         "type":"string",
         "description":"URI of the datastore used for this dataset"
       },
       "datasource_id":{
         "type":"string",
         "description":"Identifier of this dataset's datasource"
       },
       "excluded_input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of field identifiers, names or columns to exclude from inputs"
       },
       "excluded_input_fields_regexps":{
         "type":"array" ,
         "items":{
           "type":"string",
           "description":"A valid regular expression"
         },
         "description":"List of regular expressions, excluding input fields  by name"
       },
       "fields":{
         "anyOf":[
           {
             "type":"object",
             "additionalProperties": false
           },
           {
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "float", "int16", "millisecond", "int32", "int64", "day-of-month", "second", "hour", "integer", "int8", "year", "double", "minute", "month", "day", "day-of-week"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "numeric"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "bins":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Each tuple represents a bin from an approximate histogram.  Each bin contains the bin mean and a membership count.  Used when there are more than 32 unique numeric values"
                         },
                         "counts":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"number"
                               },
                               {
                                 "type":"integer"
                               }
                             ]
                           },
                           "description":"Captures the distribution for the field.  Contains tuples of the unique values and their occurrence counts. Used when there are 32 or less unique numeric values"
                         },
                         "kurtosis":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample kurtosis for numeric fields"
                         },
                         "maximum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Maximum value for numeric fields"
                         },
                         "mean":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample mean for numeric fields"
                         },
                         "median":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The approximate median for numeric fields"
                         },
                         "minimum":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"Minimum value for numeric fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "population":{
                           "type":"integer",
                           "description":"# of instances containing data for this field"
                         },
                         "skewness":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample skewness for numeric fields"
                         },
                         "standard_deviation":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample standard deviation for numeric fields"
                         },
                         "sum":{
                           "type":"number",
                           "description":"Sum of values (for mean calculation)"
                         },
                         "sum_squares":{
                           "type":"number",
                           "description":"Sum of squared values (for variance calculation)"
                         },
                         "variance":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"number"
                             }
                           ],
                           "description":"The sample variance for numeric fields"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "text"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "tag_cloud":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top terms with number of occurences"
                         },
                         "term_forms":{
                           "type":"object",
                           "description":"Dictionary of multi-form terms to all forms seen"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "datetime"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "maximum":{
                           "type":"string",
                           "description":"Maximum datetime, as a string value"
                         },
                         "maximum_timestamp":{
                           "type":"integer",
                           "description":"Maximum datetime, as a numeric epoch"
                         },
                         "minimum":{
                           "type":"string",
                           "description":"Minimum datetime, as a string value"
                         },
                         "minimum_timestamp":{
                           "type":"integer",
                           "description":"Minimum datetime, as a numeric epoch"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         },
                         "non_decreasing":{
                           "type":"boolean",
                           "description":"True if times never decrease with row number"
                         },
                         "non_increasing":{
                           "type":"boolean",
                           "description":"True if times never increase with row number"
                         }
                       },
                       "additionalProperties": false
                     },
                     "time_formats":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Formats of times in this field from clj-time"
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "item_analysis":{
                       "type":"object",
                       "properties":{
                         "limit":{
                           "type":"number",
                           "minimum":1,
                           "default": 10000,
                           "description":"Maximum number of items considered."
                         },
                         "pruning_strategy":{
                           "type":"string" ,
                           "enum":[
                             "nearest_to_frequency", "most_frequent"
                           ],
                           "default": "nearest_to_frequency",
                           "description":"Strategy used to select items when item_limit is surpassed"
                         },
                         "separator":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                         },
                         "separator_regexp":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string"
                             }
                           ],
                           "description":"Regular expression delimiting items in the field. Overrides item_separator."
                         },
                         "target_frequency":{
                           "type":"number",
                           "minimum":0,
                           "maximum":1,
                           "default": 0.3333333333333333,
                           "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                         }
                       },
                       "description":"Parameters controlling how items are extracted from text"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "items"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "average_length":{
                           "type":"number",
                           "description":"The average # of chars for non-missing values"
                         },
                         "items":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"Top items with number of occurences"
                         }
                       }
                     }
                   }
                 },
                 {
                   "type":"object",
                   "properties":{
                     "auto_generated":{
                       "type":"boolean",
                       "description":"True if the field was generated from another field"
                     },
                     "child_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the children if this generates other fields"
                     },
                     "column_number":{
                       "type":"integer",
                       "minimum":0,
                       "description":"Column from the data source"
                     },
                     "datatype":{
                       "type":"string" ,
                       "enum":[
                         "string"
                       ],
                       "description":"The storage type of the field"
                     },
                     "description":{
                       "type":"string",
                       "description":"Free text description of the field"
                     },
                     "label":{
                       "type":"string",
                       "description":"A label for the field (free text for use by clients)"
                     },
                     "locale":{
                       "type":"string",
                       "description":"Overrides global locale"
                     },
                     "missing_tokens":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"Overrides global missing tokens"
                     },
                     "name":{
                       "type":"string",
                       "description":"Name for the field"
                     },
                     "optype":{
                       "type":"string" ,
                       "enum":[
                         "categorical"
                       ],
                       "description":"Operational type of this field"
                     },
                     "parent_ids":{
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       },
                       "description":"IDs of the parents if this is a generated field"
                     },
                     "preferred":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "default": true,
                       "description":"Whether the field is used by default for model creation"
                     },
                     "provenance":{
                       "type":"string" ,
                       "enum":[
                         "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                       ],
                       "description":"Field value origin (when the value is generated)"
                     },
                     "summary":{
                       "type":"object",
                       "properties":{
                         "categories":{
                           "type":"array" ,
                           "items":{
                             "type":"array" ,
                             "items":[
                               {
                                 "type":"string"
                               },
                               {
                                 "type":"number"
                               }
                             ]
                           },
                           "description":"The possible categories for categorical fields"
                         },
                         "missing_count":{
                           "type":"integer",
                           "description":"# of missing instances"
                         }
                       }
                     },
                     "term_analysis":{
                       "type":"object",
                       "properties":{
                         "bigrams":{
                           "type":"boolean",
                           "description":"Allow terms to be bigrams"
                         },
                         "case_sensitive":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis is case sensitive"
                         },
                         "enabled":{
                           "type":"boolean",
                           "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                         },
                         "excluded_terms":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of terms to ignore when performing term analysis"
                         },
                         "language":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                               ]
                             }
                           ],
                           "default": "none",
                           "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                         },
                         "ngrams":{
                           "type":"integer",
                           "minimum":1,
                           "description":"The maximum length of consecutive tokens to consider as terms"
                         },
                         "stem_words":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis stems words"
                         },
                         "stopword_diligence":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"string" ,
                               "enum":[
                                 "light", "aggressive", "normal"
                               ]
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         },
                         "stopword_removal":{
                           "type":"string" ,
                           "enum":[
                             "none", "all_languages", "selected_language"
                           ],
                           "description":"Remove words that are stopwords in any language."
                         },
                         "term_filters":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string" ,
                                 "enum":[
                                   "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                 ]
                               }
                             }
                           ],
                           "description":"A list of filters to apply when choosing the termset"
                         },
                         "term_regexps":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "type":"string"
                               }
                             }
                           ],
                           "description":"A list of regular expressions to consider as terms"
                         },
                         "token_mode":{
                           "type":"string" ,
                           "enum":[
                             "full_terms_only", "tokens_only", "all"
                           ],
                           "default": "all",
                           "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                         },
                         "use_stopwords":{
                           "anyOf":[
                             {
                               "type":"null"
                             },
                             {
                               "type":"boolean"
                             }
                           ],
                           "description":"Defines whether the term analysis uses stop words"
                         }
                       }
                     }
                   }
                 }
               ]
             }
           }
         ],
         "description":"Possibly partial list of fields for this dataset"
       },
       "header":{
         "type":"boolean",
         "default": true,
         "description":"Whether the CSV contains a header"
       },
       "input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"List of datasource field identifiers, names or columns to use"
       },
       "input_fields_regexps":{
         "type":"array" ,
         "items":{
           "type":"string",
           "description":"A valid regular expression"
         },
         "description":"List of regular expressions, selecting input fields  by name"
       },
       "input_offset":{
         "type":"integer",
         "minimum":0,
         "description":"Number of rows to skip to start field generation."
       },
       "input_step":{
         "type":"integer",
         "minimum":1,
         "default": 1,
         "description":"Step when traversing input rows to generate fields."
       },
       "json_query":{
         "type":"object",
         "properties":{
           "distinct":{
             "type":"boolean",
             "description":"True for DISTINCT modifier in SELECT"
           },
           "from":{
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   keyword?
                 },
                 {
                   "type":"string"
                 }
               ]
             },
             "description":"A list of dataset names to be used as tables"
           },
           "full_join":{
             "type":"array" ,
             "items":[
               {
                 "anyOf":[
                   {
                     keyword?
                   },
                   {
                     "type":"string"
                   }
                 ]
               },
               {
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ]
               }
             ],
             "description":"A FULL OUTER join specification"
           },
           "group_by":{
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"string"
                 },
                 {
                   keyword?
                 }
               ]
             },
             "description":"A list of field ids to perform a GROUP BY"
           },
           "having":{
             "type":"array" ,
             "items":[
               {
                 "type":"string" ,
                 "enum":[
                   "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                 ]
               },
               {
                 "anyOf":[
                   {
                     "anyOf":[
                       {
                         "type":"string"
                       },
                       {
                         keyword?
                       }
                     ]
                   },
                   {
                     "type":"number"
                   },
                   {
                     "$ref":"sql.json"
                   },
                   {
                     "type":"array" ,
                     "items":{
                       "anyOf":[
                         {
                           "anyOf":[
                             {
                               "type":"string"
                             },
                             {
                               keyword?
                             }
                           ]
                         },
                         {
                           "type":"number"
                         },
                         {
                           "$ref":"sql.json"
                         }
                       ]
                     }
                   }
                 ]
               }
             ],
             "description":"An SQL HAVING clause, as a function application"
           },
           "join":{
             "type":"array" ,
             "items":[
               {
                 "anyOf":[
                   {
                     keyword?
                   },
                   {
                     "type":"string"
                   }
                 ]
               },
               {
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ]
               }
             ],
             "description":"An inner JOIN specification"
           },
           "left_join":{
             "type":"array" ,
             "items":[
               {
                 "anyOf":[
                   {
                     keyword?
                   },
                   {
                     "type":"string"
                   }
                 ]
               },
               {
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ]
               }
             ],
             "description":"An outer LEFT JOIN specification"
           },
           "limit":{
             "type":"integer",
             "minimum":1,
             "description":"Maximum number of output rows"
           },
           "offset":{
             "type":"integer",
             "minimum":0,
             "default": 0,
             "description":"Query offset (rows before skipped)"
           },
           "order_by":{
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "anyOf":[
                     {
                       "type":"string"
                     },
                     {
                       keyword?
                     }
                   ]
                 },
                 {
                   "type":"array" ,
                   "items":[
                     {
                       "anyOf":[
                         {
                           "type":"string"
                         },
                         {
                           keyword?
                         }
                       ]
                     },
                     {
                       "type":"string" ,
                       "enum":[
                         "DESC", "ASC", "desc", "asc"
                       ]
                     }
                   ]
                 }
               ]
             },
             "description":"A list of field names or pairs of the form [field "ASC"] or [field "DESC"]"
           },
           "right_join":{
             "type":"array" ,
             "items":[
               {
                 "anyOf":[
                   {
                     keyword?
                   },
                   {
                     "type":"string"
                   }
                 ]
               },
               {
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ]
               }
             ],
             "description":"An outer RIGHT JOIN specification"
           },
           "select":{
             "type":"array" ,
             "items":{
               "anyOf":[
                 {
                   "type":"array" ,
                   "items":[
                     {
                       "type":"string" ,
                       "enum":[
                         "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                       ]
                     },
                     {
                       "anyOf":[
                         {
                           "anyOf":[
                             {
                               "type":"string"
                             },
                             {
                               keyword?
                             }
                           ]
                         },
                         {
                           "type":"number"
                         },
                         {
                           "$ref":"sql.json"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "anyOf":[
                               {
                                 "anyOf":[
                                   {
                                     "type":"string"
                                   },
                                   {
                                     keyword?
                                   }
                                 ]
                               },
                               {
                                 "type":"number"
                               },
                               {
                                 "$ref":"sql.json"
                               }
                             ]
                           }
                         }
                       ]
                     }
                   ]
                 },
                 {
                   "type":"array" ,
                   "items":[
                     {
                       "anyOf":[
                         {
                           "anyOf":[
                             {
                               "type":"string"
                             },
                             {
                               keyword?
                             }
                           ]
                         },
                         {
                           "type":"array" ,
                           "items":[
                             {
                               "type":"string" ,
                               "enum":[
                                 "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                               ]
                             },
                             {
                               "anyOf":[
                                 {
                                   "anyOf":[
                                     {
                                       "type":"string"
                                     },
                                     {
                                       keyword?
                                     }
                                   ]
                                 },
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "$ref":"sql.json"
                                 },
                                 {
                                   "type":"array" ,
                                   "items":{
                                     "anyOf":[
                                       {
                                         "anyOf":[
                                           {
                                             "type":"string"
                                           },
                                           {
                                             keyword?
                                           }
                                         ]
                                       },
                                       {
                                         "type":"number"
                                       },
                                       {
                                         "$ref":"sql.json"
                                       }
                                     ]
                                   }
                                 }
                               ]
                             }
                           ]
                         }
                       ]
                     },
                     {
                       "type":"string"
                     }
                   ]
                 },
                 {
                   "type":"number"
                 },
                 {
                   "anyOf":[
                     {
                       "type":"string"
                     },
                     {
                       keyword?
                     }
                   ]
                 }
               ]
             },
             "description":"A list of selected values specifications.  They'll conform the fields of the new dataset."
           },
           "where":{
             "type":"array" ,
             "items":[
               {
                 "type":"string" ,
                 "enum":[
                   "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                 ]
               },
               {
                 "anyOf":[
                   {
                     "anyOf":[
                       {
                         "type":"string"
                       },
                       {
                         keyword?
                       }
                     ]
                   },
                   {
                     "type":"number"
                   },
                   {
                     "$ref":"sql.json"
                   },
                   {
                     "type":"array" ,
                     "items":{
                       "anyOf":[
                         {
                           "anyOf":[
                             {
                               "type":"string"
                             },
                             {
                               keyword?
                             }
                           ]
                         },
                         {
                           "type":"number"
                         },
                         {
                           "$ref":"sql.json"
                         }
                       ]
                     }
                   }
                 ]
               }
             ],
             "description":"A select condition as a function application"
           }
         },
         "required":[
           "select"
         ],
         "additionalProperties": false,
         "description":"A canonical translation of `query` (when given) as a JSON map, using field identifiers everywhere."
       },
       "juxtapose":{
         "type":"boolean",
         "description":"If true, input datasets will be juxtaposed rather than concatenated"
       },
       "juxtapose_input_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"null"
             },
             {
               "type":"array" ,
               "items":{
                 "anyOf":[
                   {
                     "type":"integer"
                   },
                   {
                     "type":"string"
                   }
                 ]
               }
             }
           ]
         },
         "description":"A list of input fields for each entry in origin_ids. Must be exhaustive.  Null entries mean all fields. Only used when juxtaposing."
       },
       "locale":{
         "type":"string",
         "description":"Default locale for field values"
       },
       "missing_numeric_count":{
         "type":"integer",
         "minimum":0,
         "description":"Number of rows in the dataset with at one missing numeric values"
       },
       "missing_tokens":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"Default tokens that represent a missing value"
       },
       "objective":{
         "anyOf":[
           {
             "type":"null"
           },
           {
             "type":"object",
             "properties":{
               "auto_generated":{
                 "type":"boolean",
                 "description":"True if the field was generated from another field"
               },
               "child_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the children if this generates other fields"
               },
               "column_number":{
                 "type":"integer",
                 "minimum":0,
                 "description":"Column from the data source"
               },
               "datatype":{
                 "type":"string",
                 "description":"The storage type of the field"
               },
               "description":{
                 "type":"string",
                 "description":"Free text description of the field"
               },
               "label":{
                 "type":"string",
                 "description":"A label for the field (free text for use by clients)"
               },
               "locale":{
                 "type":"string",
                 "description":"Overrides global locale"
               },
               "missing_tokens":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"Overrides global missing tokens"
               },
               "name":{
                 "type":"string",
                 "description":"Name for the field"
               },
               "parent_ids":{
                 "type":"array" ,
                 "items":{
                   "type":"string"
                 },
                 "description":"IDs of the parents if this is a generated field"
               },
               "preferred":{
                 "anyOf":[
                   {
                     "type":"null"
                   },
                   {
                     "type":"boolean"
                   }
                 ],
                 "default": true,
                 "description":"Whether the field is used by default for model creation"
               },
               "provenance":{
                 "type":"string" ,
                 "enum":[
                   "forecast", "confidence", "flatline", "probability", "query", "forecast_timestamp", "vote_count", "vote", "forecast_upper_bound", "datetime", "prediction", "anomaly_score", "projection", "forecast_trend", "topic_distribution", "forecast_level", "forecast_seasonality", "forecast_lower_bound", "centroid", "batch_input", "importance", "node"
                 ],
                 "description":"Field value origin (when the value is generated)"
               }
             }
           }
         ],
         "description":"Descriptor of the field that should be used as objective field by default, including its id"
       },
       "origin_id":{
         "type":"string",
         "description":"Identifier of the dataset to be cloned"
       },
       "origin_ids":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"A list of identifier of datasets to be cloned or used as query tables"
       },
       "origin_names":{
         "type":"array" ,
         "items":{
           "type":"string"
         },
         "description":"A list of names for the respective origin_ids, to be used by query specifications"
       },
       "output_all_inputs":{
         "type":"boolean",
         "description":"If `true`, all input fields will be prepended to output_fields. Prepended fields retain their original identifier in the new dataset, but other than that it behaves as if the (all) generator had been added to output_fields."
       },
       "output_all_inputs_but":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"integer"
             },
             {
               "type":"string"
             }
           ]
         },
         "description":"If set to a list of identifiers, names or columns, uses (all-but) to prepend to output_fields all input fields except the ones being specified"
       },
       "output_fields":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "type":"string"
             },
             {
               "type":"object",
               "properties":{
                 "description":{
                   "type":"string",
                   "description":"Description of the field, when there's only one"
                 },
                 "descriptions":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Descriptions of the fields"
                 },
                 "generator":{
                   "anyOf":[
                     {
                       "type":"string"
                     },
                     {
                       "type":"array" ,
                       "items":{
                         "type":"any"
                       }
                     }
                   ],
                   "description":"A Flatline expression that generates one or more fields"
                 },
                 "ids":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"List of ids for fields generated by this generator"
                 },
                 "item_analyses":{
                   "type":"array" ,
                   "items":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"object",
                         "properties":{
                           "limit":{
                             "type":"number",
                             "minimum":1,
                             "default": 10000,
                             "description":"Maximum number of items considered."
                           },
                           "pruning_strategy":{
                             "type":"string" ,
                             "enum":[
                               "nearest_to_frequency", "most_frequent"
                             ],
                             "default": "nearest_to_frequency",
                             "description":"Strategy used to select items when item_limit is surpassed"
                           },
                           "separator":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"string"
                               }
                             ],
                             "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                           },
                           "separator_regexp":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"string"
                               }
                             ],
                             "description":"Regular expression delimiting items in the field. Overrides item_separator."
                           },
                           "target_frequency":{
                             "type":"number",
                             "minimum":0,
                             "maximum":1,
                             "default": 0.3333333333333333,
                             "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                           }
                         }
                       }
                     ]
                   },
                   "description":"A list of item analysis properties, one per generated field. Entries can be null to denote no special value."
                 },
                 "item_analysis":{
                   "type":"object",
                   "properties":{
                     "limit":{
                       "type":"number",
                       "minimum":1,
                       "default": 10000,
                       "description":"Maximum number of items considered."
                     },
                     "pruning_strategy":{
                       "type":"string" ,
                       "enum":[
                         "nearest_to_frequency", "most_frequent"
                       ],
                       "default": "nearest_to_frequency",
                       "description":"Strategy used to select items when item_limit is surpassed"
                     },
                     "separator":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                     },
                     "separator_regexp":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"Regular expression delimiting items in the field. Overrides item_separator."
                     },
                     "target_frequency":{
                       "type":"number",
                       "minimum":0,
                       "maximum":1,
                       "default": 0.3333333333333333,
                       "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                     }
                   },
                   "description":"For a single generated field, its item analysis options. If many fields are generated by this entry, all will have this default"
                 },
                 "json_generator":{
                   "type":"array" ,
                   "items":{
                     "type":"any"
                   },
                   "description":"When generator is a sexp, its JSON representation"
                 },
                 "label":{
                   "type":"string",
                   "description":"A label for the generated field, when there's only one"
                 },
                 "labels":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"Labels for the generated fields"
                 },
                 "name":{
                   "type":"string",
                   "description":"For a single generated field, its name"
                 },
                 "names":{
                   "type":"array" ,
                   "items":{
                     "type":"string"
                   },
                   "description":"A list of names, one per generated field"
                 },
                 "optype":{
                   "type":"string" ,
                   "enum":[
                     "numeric", "items", "text", "datetime", "categorical"
                   ],
                   "description":"For a single generated field, its optype. If many fields are generated by this entry, all will have this default"
                 },
                 "optypes":{
                   "type":"array" ,
                   "items":{
                     "type":"string" ,
                     "enum":[
                       "numeric", "items", "text", "datetime", "categorical"
                     ]
                   },
                   "description":"A list of optypes, one per generated field"
                 },
                 "term_analyses":{
                   "type":"array" ,
                   "items":{
                     "anyOf":[
                       {
                         "type":"null"
                       },
                       {
                         "type":"object",
                         "properties":{
                           "bigrams":{
                             "type":"boolean",
                             "description":"Allow terms to be bigrams"
                           },
                           "case_sensitive":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"boolean"
                               }
                             ],
                             "description":"Defines whether the term analysis is case sensitive"
                           },
                           "enabled":{
                             "type":"boolean",
                             "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                           },
                           "excluded_terms":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"array" ,
                                 "items":{
                                   "type":"string"
                                 }
                               }
                             ],
                             "description":"A list of terms to ignore when performing term analysis"
                           },
                           "language":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"string" ,
                                 "enum":[
                                   "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                                 ]
                               }
                             ],
                             "default": "none",
                             "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                           },
                           "ngrams":{
                             "type":"integer",
                             "minimum":1,
                             "description":"The maximum length of consecutive tokens to consider as terms"
                           },
                           "stem_words":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"boolean"
                               }
                             ],
                             "description":"Defines whether the term analysis stems words"
                           },
                           "stopword_diligence":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"string" ,
                                 "enum":[
                                   "light", "aggressive", "normal"
                                 ]
                               }
                             ],
                             "description":"Defines whether the term analysis uses stop words"
                           },
                           "stopword_removal":{
                             "type":"string" ,
                             "enum":[
                               "none", "all_languages", "selected_language"
                             ],
                             "description":"Remove words that are stopwords in any language."
                           },
                           "term_filters":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"array" ,
                                 "items":{
                                   "type":"string" ,
                                   "enum":[
                                     "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                                   ]
                                 }
                               }
                             ],
                             "description":"A list of filters to apply when choosing the termset"
                           },
                           "term_regexps":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"array" ,
                                 "items":{
                                   "type":"string"
                                 }
                               }
                             ],
                             "description":"A list of regular expressions to consider as terms"
                           },
                           "token_mode":{
                             "type":"string" ,
                             "enum":[
                               "full_terms_only", "tokens_only", "all"
                             ],
                             "default": "all",
                             "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                           },
                           "use_stopwords":{
                             "anyOf":[
                               {
                                 "type":"null"
                               },
                               {
                                 "type":"boolean"
                               }
                             ],
                             "description":"Defines whether the term analysis uses stop words"
                           }
                         }
                       }
                     ]
                   },
                   "description":"A list of term analysis properties, one per generated field. Entries can be null to denote no special value."
                 },
                 "term_analysis":{
                   "type":"object",
                   "properties":{
                     "bigrams":{
                       "type":"boolean",
                       "description":"Allow terms to be bigrams"
                     },
                     "case_sensitive":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis is case sensitive"
                     },
                     "enabled":{
                       "type":"boolean",
                       "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                     },
                     "excluded_terms":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of terms to ignore when performing term analysis"
                     },
                     "language":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                           ]
                         }
                       ],
                       "default": "none",
                       "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                     },
                     "ngrams":{
                       "type":"integer",
                       "minimum":1,
                       "description":"The maximum length of consecutive tokens to consider as terms"
                     },
                     "stem_words":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis stems words"
                     },
                     "stopword_diligence":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "light", "aggressive", "normal"
                           ]
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     },
                     "stopword_removal":{
                       "type":"string" ,
                       "enum":[
                         "none", "all_languages", "selected_language"
                       ],
                       "description":"Remove words that are stopwords in any language."
                     },
                     "term_filters":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string" ,
                             "enum":[
                               "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                             ]
                           }
                         }
                       ],
                       "description":"A list of filters to apply when choosing the termset"
                     },
                     "term_regexps":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"array" ,
                           "items":{
                             "type":"string"
                           }
                         }
                       ],
                       "description":"A list of regular expressions to consider as terms"
                     },
                     "token_mode":{
                       "type":"string" ,
                       "enum":[
                         "full_terms_only", "tokens_only", "all"
                       ],
                       "default": "all",
                       "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                     },
                     "use_stopwords":{
                       "anyOf":[
                         {
                           "type":"null"
                         },
                         {
                           "type":"boolean"
                         }
                       ],
                       "description":"Defines whether the term analysis uses stop words"
                     }
                   },
                   "description":"For a single generated field, its term analysis options. If many fields are generated by this entry, all will have this default"
                 }
               },
               "required":[
                 "generator"
               ]
             }
           ]
         },
         "description":"List of fields to be added, via Flatline, to the dataset"
       },
       "output_row_filter":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "type":"array" ,
             "items":{
               "type":"any"
             }
           }
         ],
         "description":"Expression specifying the generated rows to be included in the dataset"
       },
       "query":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "type":"object",
             "properties":{
               "distinct":{
                 "type":"boolean",
                 "description":"True for DISTINCT modifier in SELECT"
               },
               "from":{
                 "type":"array" ,
                 "items":{
                   "anyOf":[
                     {
                       keyword?
                     },
                     {
                       "type":"string"
                     }
                   ]
                 },
                 "description":"A list of dataset names to be used as tables"
               },
               "full_join":{
                 "type":"array" ,
                 "items":[
                   {
                     "anyOf":[
                       {
                         keyword?
                       },
                       {
                         "type":"string"
                       }
                     ]
                   },
                   {
                     "type":"array" ,
                     "items":[
                       {
                         "type":"string" ,
                         "enum":[
                           "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                         ]
                       },
                       {
                         "anyOf":[
                           {
                             "anyOf":[
                               {
                                 "type":"string"
                               },
                               {
                                 keyword?
                               }
                             ]
                           },
                           {
                             "type":"number"
                           },
                           {
                             "$ref":"sql.json"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "anyOf":[
                                 {
                                   "anyOf":[
                                     {
                                       "type":"string"
                                     },
                                     {
                                       keyword?
                                     }
                                   ]
                                 },
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "$ref":"sql.json"
                                 }
                               ]
                             }
                           }
                         ]
                       }
                     ]
                   }
                 ],
                 "description":"A FULL OUTER join specification"
               },
               "group_by":{
                 "type":"array" ,
                 "items":{
                   "anyOf":[
                     {
                       "type":"string"
                     },
                     {
                       keyword?
                     }
                   ]
                 },
                 "description":"A list of field ids to perform a GROUP BY"
               },
               "having":{
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ],
                 "description":"An SQL HAVING clause, as a function application"
               },
               "join":{
                 "type":"array" ,
                 "items":[
                   {
                     "anyOf":[
                       {
                         keyword?
                       },
                       {
                         "type":"string"
                       }
                     ]
                   },
                   {
                     "type":"array" ,
                     "items":[
                       {
                         "type":"string" ,
                         "enum":[
                           "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                         ]
                       },
                       {
                         "anyOf":[
                           {
                             "anyOf":[
                               {
                                 "type":"string"
                               },
                               {
                                 keyword?
                               }
                             ]
                           },
                           {
                             "type":"number"
                           },
                           {
                             "$ref":"sql.json"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "anyOf":[
                                 {
                                   "anyOf":[
                                     {
                                       "type":"string"
                                     },
                                     {
                                       keyword?
                                     }
                                   ]
                                 },
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "$ref":"sql.json"
                                 }
                               ]
                             }
                           }
                         ]
                       }
                     ]
                   }
                 ],
                 "description":"An inner JOIN specification"
               },
               "left_join":{
                 "type":"array" ,
                 "items":[
                   {
                     "anyOf":[
                       {
                         keyword?
                       },
                       {
                         "type":"string"
                       }
                     ]
                   },
                   {
                     "type":"array" ,
                     "items":[
                       {
                         "type":"string" ,
                         "enum":[
                           "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                         ]
                       },
                       {
                         "anyOf":[
                           {
                             "anyOf":[
                               {
                                 "type":"string"
                               },
                               {
                                 keyword?
                               }
                             ]
                           },
                           {
                             "type":"number"
                           },
                           {
                             "$ref":"sql.json"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "anyOf":[
                                 {
                                   "anyOf":[
                                     {
                                       "type":"string"
                                     },
                                     {
                                       keyword?
                                     }
                                   ]
                                 },
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "$ref":"sql.json"
                                 }
                               ]
                             }
                           }
                         ]
                       }
                     ]
                   }
                 ],
                 "description":"An outer LEFT JOIN specification"
               },
               "limit":{
                 "type":"integer",
                 "minimum":1,
                 "description":"Maximum number of output rows"
               },
               "offset":{
                 "type":"integer",
                 "minimum":0,
                 "default": 0,
                 "description":"Query offset (rows before skipped)"
               },
               "order_by":{
                 "type":"array" ,
                 "items":{
                   "anyOf":[
                     {
                       "anyOf":[
                         {
                           "type":"string"
                         },
                         {
                           keyword?
                         }
                       ]
                     },
                     {
                       "type":"array" ,
                       "items":[
                         {
                           "anyOf":[
                             {
                               "type":"string"
                             },
                             {
                               keyword?
                             }
                           ]
                         },
                         {
                           "type":"string" ,
                           "enum":[
                             "DESC", "ASC", "desc", "asc"
                           ]
                         }
                       ]
                     }
                   ]
                 },
                 "description":"A list of field names or pairs of the form [field "ASC"] or [field "DESC"]"
               },
               "right_join":{
                 "type":"array" ,
                 "items":[
                   {
                     "anyOf":[
                       {
                         keyword?
                       },
                       {
                         "type":"string"
                       }
                     ]
                   },
                   {
                     "type":"array" ,
                     "items":[
                       {
                         "type":"string" ,
                         "enum":[
                           "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                         ]
                       },
                       {
                         "anyOf":[
                           {
                             "anyOf":[
                               {
                                 "type":"string"
                               },
                               {
                                 keyword?
                               }
                             ]
                           },
                           {
                             "type":"number"
                           },
                           {
                             "$ref":"sql.json"
                           },
                           {
                             "type":"array" ,
                             "items":{
                               "anyOf":[
                                 {
                                   "anyOf":[
                                     {
                                       "type":"string"
                                     },
                                     {
                                       keyword?
                                     }
                                   ]
                                 },
                                 {
                                   "type":"number"
                                 },
                                 {
                                   "$ref":"sql.json"
                                 }
                               ]
                             }
                           }
                         ]
                       }
                     ]
                   }
                 ],
                 "description":"An outer RIGHT JOIN specification"
               },
               "select":{
                 "type":"array" ,
                 "items":{
                   "anyOf":[
                     {
                       "type":"array" ,
                       "items":[
                         {
                           "type":"string" ,
                           "enum":[
                             "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                           ]
                         },
                         {
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             },
                             {
                               "type":"array" ,
                               "items":{
                                 "anyOf":[
                                   {
                                     "anyOf":[
                                       {
                                         "type":"string"
                                       },
                                       {
                                         keyword?
                                       }
                                     ]
                                   },
                                   {
                                     "type":"number"
                                   },
                                   {
                                     "$ref":"sql.json"
                                   }
                                 ]
                               }
                             }
                           ]
                         }
                       ]
                     },
                     {
                       "type":"array" ,
                       "items":[
                         {
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"array" ,
                               "items":[
                                 {
                                   "type":"string" ,
                                   "enum":[
                                     "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                                   ]
                                 },
                                 {
                                   "anyOf":[
                                     {
                                       "anyOf":[
                                         {
                                           "type":"string"
                                         },
                                         {
                                           keyword?
                                         }
                                       ]
                                     },
                                     {
                                       "type":"number"
                                     },
                                     {
                                       "$ref":"sql.json"
                                     },
                                     {
                                       "type":"array" ,
                                       "items":{
                                         "anyOf":[
                                           {
                                             "anyOf":[
                                               {
                                                 "type":"string"
                                               },
                                               {
                                                 keyword?
                                               }
                                             ]
                                           },
                                           {
                                             "type":"number"
                                           },
                                           {
                                             "$ref":"sql.json"
                                           }
                                         ]
                                       }
                                     }
                                   ]
                                 }
                               ]
                             }
                           ]
                         },
                         {
                           "type":"string"
                         }
                       ]
                     },
                     {
                       "type":"number"
                     },
                     {
                       "anyOf":[
                         {
                           "type":"string"
                         },
                         {
                           keyword?
                         }
                       ]
                     }
                   ]
                 },
                 "description":"A list of selected values specifications.  They'll conform the fields of the new dataset."
               },
               "where":{
                 "type":"array" ,
                 "items":[
                   {
                     "type":"string" ,
                     "enum":[
                       "covar_samp", "CHARACTER_LENGTH", "floor", "ceil", "not-null", "NULL", "!=", "SIGN", "var_pop", "PI", "SQRT", "SIMILAR", "min", "trim", "=", "OVERLAPS", "row_number", "coalesce", "TRUNCATE", "SUM", "*", "%", "strftime", "<=", "cast", "COT", "upper", "group_concat", "STDDEV_POP", "instr", "COUNT", "AVG", "COALESCE", "ATAN2", "not", "CONTAINS", "atan2", "cot", "count-distinct", "sum", "/", "rand_integer", "VARIANCE", "rand", "CEIL", "contains", "TRIM", "null", "like", "JULIANDAY", "-", "DATE", "RAND", "LENGTH", "COUNT-DISTINCT", "max", "POSITION", "MIN", "DISTINCT", "degrees", "overlaps", "count", "atan", "UPPER", "EXISTS", "ln", "LN", "collect-distinct", "NOT", "any", "POWER", "distinct", "position", "MOD", "ASIN", "sin", "MAX", "replace", "power", "pi", "radians", "AND", "similar", "stddev_pop", "ltrim", "COVAR_POP", "VAR_POP", "TIME", "exp", "SUBSTR", "ANY", "or", "COS", "substr", "stddev", "STDDEV", "log10", "var_samp", ">=", "VAR_SAMP", "sqrt", "julianday", "time", "STRFTIME", "length", "COLLECT", "tan", "datetime", "NOT-NULL", "cos", "DEGREES", "truncate", "GROUP_CONCAT", "FLOOR", "LTRIM", "CHAR_LENGTH", "and", "INSTR", "ACOS", "mod", "avg", "COLLECT-DISTINCT", "<", "abs", "between", "ATAN", "<>", "lower", "char_length", "COVAR_SAMP", "collect", "date", "group_concatd", "REPLACE", "SIN", "DATETIME", "RTRIM", "ROUND", "TAN", "variance", "OR", "all", "LOWER", "exists", "EXP", "ROW_NUMBER", "STDDEV_SAMP", "stddev_samp", "RADIANS", "GROUP_CONCATD", "RAND_INTEGER", "character_length", "ALL", "||", "LIKE", "round", "IN", "LOG10", "covar_pop", "asin", "sign", "+", "rtrim", "BETWEEN", "ABS", "CAST", "in", "acos", ">"
                     ]
                   },
                   {
                     "anyOf":[
                       {
                         "anyOf":[
                           {
                             "type":"string"
                           },
                           {
                             keyword?
                           }
                         ]
                       },
                       {
                         "type":"number"
                       },
                       {
                         "$ref":"sql.json"
                       },
                       {
                         "type":"array" ,
                         "items":{
                           "anyOf":[
                             {
                               "anyOf":[
                                 {
                                   "type":"string"
                                 },
                                 {
                                   keyword?
                                 }
                               ]
                             },
                             {
                               "type":"number"
                             },
                             {
                               "$ref":"sql.json"
                             }
                           ]
                         }
                       }
                     ]
                   }
                 ],
                 "description":"A select condition as a function application"
               }
             },
             "required":[
               "select"
             ],
             "additionalProperties": false
           }
         ],
         "description":"An SQL-like query specification for generating a new dataset based on the ones in origin_id(s). It can be either a plain string or a structured map."
       },
       "quote":{
         "type":"string",
         "default": "\""
       },
       "refresh_field_types":{
         "type":"boolean",
         "description":"Whether to try to upgrade original field types in filters and samplings"
       },
       "refresh_objective":{
         "type":"boolean",
         "description":"Whether to recompute the objective field when adding
              fields to a dataset."
       },
       "refresh_preferred":{
         "type":"boolean",
         "description":"Whether to try to upgrade original preferred flags in filters, samplings and generation"
       },
       "row_filter":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "type":"array" ,
             "items":{
               "type":"any"
             }
           }
         ],
         "description":"Expression specifying the rows to be included in the dataset"
       },
       "row_range":{
         "type":"object",
         "properties":{
           "size":{
             "type":"integer",
             "minimum":0
           },
           "start":{
             "type":"integer",
             "minimum":0
           }
         },
         "description":"Rows used to build this object"
       },
       "row_ranges":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "size":{
                       "type":"integer",
                       "minimum":0
                     },
                     "start":{
                       "type":"integer",
                       "minimum":0
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Rows used to build this object, per dataset"
       },
       "sample":{
         "type":"object",
         "properties":{
           "out_of_bag":{
             "type":"boolean",
             "description":"Is the sampling out of bag?"
           },
           "rate":{
             "type":"number",
             "minimum":0,
             "default": 1.0,
             "description":"The rate: fraction of rows we pick"
           },
           "replace":{
             "type":"boolean",
             "description":"Whether we sample with replacement or not"
           },
           "seed":{
             "anyOf":[
               {
                 "type":"number"
               },
               {
                 "type":"string"
               }
             ],
             "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
           }
         },
         "description":"Sampling of input rows used to build this object"
       },
       "samples":{
         "type":"array" ,
         "items":{
           "anyOf":[
             {
               "anyOf":[
                 {
                   "type":"null"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             },
             {
               "type":"array" ,
               "items":[
                 {
                   "type":"string"
                 },
                 {
                   "type":"object",
                   "properties":{
                     "out_of_bag":{
                       "type":"boolean",
                       "description":"Is the sampling out of bag?"
                     },
                     "rate":{
                       "type":"number",
                       "minimum":0,
                       "default": 1.0,
                       "description":"The rate: fraction of rows we pick"
                     },
                     "replace":{
                       "type":"boolean",
                       "description":"Whether we sample with replacement or not"
                     },
                     "seed":{
                       "anyOf":[
                         {
                           "type":"number"
                         },
                         {
                           "type":"string"
                         }
                       ],
                       "description":"A string to feed the random number generator used for sampling.  The same seed produces always the same sample (if all other parameters stay the same).  If not specified, we choose a seed at random"
                     }
                   }
                 }
               ]
             }
           ]
         },
         "description":"Sampling of rows used to build this object, per dataset"
       },
       "separator":{
         "type":"string",
         "default": ", ",
         "description":"The CSV separator character"
       },
       "serialized_bytes":{
         "type":"integer",
         "minimum":-1,
         "description":"Number of bytes of the serialized dataset"
       },
       "sql_output_fields":{
         "type":"array" ,
         "items":{
           "type":"object",
           "properties":{
             "column":{
               "type":"integer",
               "minimum":0,
               "description":"The output column number"
             },
             "item_analysis":{
               "type":"object",
               "properties":{
                 "limit":{
                   "type":"number",
                   "minimum":1,
                   "default": 10000,
                   "description":"Maximum number of items considered."
                 },
                 "pruning_strategy":{
                   "type":"string" ,
                   "enum":[
                     "nearest_to_frequency", "most_frequent"
                   ],
                   "default": "nearest_to_frequency",
                   "description":"Strategy used to select items when item_limit is surpassed"
                 },
                 "separator":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"string"
                     }
                   ],
                   "description":"Character delimiting items in the field. Set to null to autodetect if there is no regular expression."
                 },
                 "separator_regexp":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"string"
                     }
                   ],
                   "description":"Regular expression delimiting items in the field. Overrides item_separator."
                 },
                 "target_frequency":{
                   "type":"number",
                   "minimum":0,
                   "maximum":1,
                   "default": 0.3333333333333333,
                   "description":"A ratio in (0, 1] with the occurence rate used when the prunning_strategy is nearest_to_frequency"
                 }
               },
               "description":"The item analysis parameters for an SQL-generated column"
             },
             "name":{
               "type":"string",
               "description":"The name of an SQL-generated column"
             },
             "optype":{
               "type":"string" ,
               "enum":[
                 "numeric", "items", "text", "datetime", "categorical"
               ],
               "description":"The optype of an SQL-generated column"
             },
             "refresh_field_type":{
               "type":"boolean",
               "description":"Whether the field's optype should be recomputed"
             },
             "refresh_preferred":{
               "type":"boolean",
               "description":"Whether the field's preferred flag should be recomputed"
             },
             "term_analysis":{
               "type":"object",
               "properties":{
                 "bigrams":{
                   "type":"boolean",
                   "description":"Allow terms to be bigrams"
                 },
                 "case_sensitive":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "description":"Defines whether the term analysis is case sensitive"
                 },
                 "enabled":{
                   "type":"boolean",
                   "description":"Enable/disables term analysis for this field.  Has no effect except for dataset creation."
                 },
                 "excluded_terms":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       }
                     }
                   ],
                   "description":"A list of terms to ignore when performing term analysis"
                 },
                 "language":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"string" ,
                       "enum":[
                         "nl", "pt", "en", "none", "zh", "ro", "tr", "it", "fa", "pl", "fi", "ca", "sv", "fr", "da", "hu", "de", "ru", "es", "ja", "cs", "ar", "ko"
                       ]
                     }
                   ],
                   "default": "none",
                   "description":"Language code for detected language, or 'none' for no detection, or nil to let us detect it."
                 },
                 "ngrams":{
                   "type":"integer",
                   "minimum":1,
                   "description":"The maximum length of consecutive tokens to consider as terms"
                 },
                 "stem_words":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "description":"Defines whether the term analysis stems words"
                 },
                 "stopword_diligence":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"string" ,
                       "enum":[
                         "light", "aggressive", "normal"
                       ]
                     }
                   ],
                   "description":"Defines whether the term analysis uses stop words"
                 },
                 "stopword_removal":{
                   "type":"string" ,
                   "enum":[
                     "none", "all_languages", "selected_language"
                   ],
                   "description":"Remove words that are stopwords in any language."
                 },
                 "term_filters":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"array" ,
                       "items":{
                         "type":"string" ,
                         "enum":[
                           "numeric_digits", "non_dictionary", "non_language_characters", "single_tokens", "html_keywords"
                         ]
                       }
                     }
                   ],
                   "description":"A list of filters to apply when choosing the termset"
                 },
                 "term_regexps":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"array" ,
                       "items":{
                         "type":"string"
                       }
                     }
                   ],
                   "description":"A list of regular expressions to consider as terms"
                 },
                 "token_mode":{
                   "type":"string" ,
                   "enum":[
                     "full_terms_only", "tokens_only", "all"
                   ],
                   "default": "all",
                   "description":"Defines whether the term analysis uses full terms, tokenized terms, or both"
                 },
                 "use_stopwords":{
                   "anyOf":[
                     {
                       "type":"null"
                     },
                     {
                       "type":"boolean"
                     }
                   ],
                   "description":"Defines whether the term analysis uses stop words"
                 }
               },
               "description":"The term analysis parameters for an SQL-generated column"
             }
           },
           "required":[
             "column"
           ],
           "additionalProperties": false
         },
         "description":"A list, one per SQL-generated column, of properties for the generated dataset's fields."
       },
       "sql_query":{
         "anyOf":[
           {
             "type":"string"
           },
           {
             "type":"array" ,
             "items":[
               {
                 "type":"string"
               },
               {
                 "anyOf":[
                   {
                     "type":"string"
                   },
                   {
                     "type":"number"
                   },
                   {
                     "type":"boolean"
                   }
                 ]
               }
             ]
           }
         ],
         "description":"A canonical translation of `query` (when given) as an SQL prepared statement, using field identifiers everywhere."
       },
       "term_limit":{
         "type":"integer",
         "default": 500,
         "description":"The maximum number of terms to be when performing text analysis"
       },
       "trim":{
         "type":"boolean",
         "default": true,
         "description":"Whether to trim field strings"
       },
       "used_bytes":{
         "type":"integer",
         "minimum":0,
         "description":"Number of source bytes used as input"
       }
     }
   }
 },
 "required":[
   "dataset"
 ],
 "additionalProperties": false
}